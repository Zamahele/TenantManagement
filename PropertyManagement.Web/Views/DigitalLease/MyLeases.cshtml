@model List<LeaseAgreementViewModel>
@using PropertyManagement.Domain.Entities

@{
    ViewData["Title"] = "My Lease Agreements";
    var tenantId = ViewBag.TenantId as int?;
}

<div class="container mt-4">
    <div class="d-flex justify-content-between align-items-center mb-4">
        <h2><i class="bi bi-file-text me-2"></i>My Lease Agreements</h2>
        <nav aria-label="breadcrumb">
            <ol class="breadcrumb">
                <li class="breadcrumb-item"><a asp-action="Profile" asp-controller="Tenants">Profile</a></li>
                <li class="breadcrumb-item active">My Leases</li>
            </ol>
        </nav>
    </div>

    @if (!Model.Any())
    {
        <div class="alert alert-info text-center">
            <i class="bi bi-info-circle me-2"></i>
            <strong>No lease agreements found.</strong>
            <p class="mb-0 mt-2">You currently have no lease agreements. Please contact the property manager.</p>
        </div>
    }
    else
    {
        <div class="row">
            @foreach (var lease in Model)
            {
                var status = lease.Status;
                var statusInfo = GetStatusInfo(status);
                var canSign = status == LeaseAgreement.LeaseStatus.Sent && !lease.IsDigitallySigned;
                var canDownload = lease.IsDigitallySigned && !string.IsNullOrEmpty(lease.GeneratedPdfPath);

                <div class="col-md-6 col-lg-4 mb-4">
                    <div class="card h-100 shadow-sm">
                        <div class="card-header d-flex justify-content-between align-items-center">
                            <h5 class="card-title mb-0">
                                <i class="bi bi-house-door me-1"></i>Room @(lease.Room?.Number ?? "N/A")
                            </h5>
                            <span class="badge @statusInfo.CssClass">@statusInfo.DisplayName</span>
                        </div>
                        <div class="card-body">
                            <div class="row mb-3">
                                <div class="col-6">
                                    <small class="text-muted">Start Date</small>
                                    <div class="fw-bold">@lease.StartDate.ToString("dd MMM yyyy")</div>
                                </div>
                                <div class="col-6">
                                    <small class="text-muted">End Date</small>
                                    <div class="fw-bold">@lease.EndDate.ToString("dd MMM yyyy")</div>
                                </div>
                            </div>
                            <div class="row mb-3">
                                <div class="col-6">
                                    <small class="text-muted">Monthly Rent</small>
                                    <div class="fw-bold text-success">@lease.RentAmount.ToString("C")</div>
                                </div>
                                <div class="col-6">
                                    <small class="text-muted">Rent Due</small>
                                    <div class="fw-bold">@GetOrdinalNumber(lease.ExpectedRentDay) of month</div>
                                </div>
                            </div>

                            @if (lease.IsDigitallySigned && lease.SignedAt.HasValue)
                            {
                                <div class="alert alert-success py-2">
                                    <i class="bi bi-check-circle me-1"></i>
                                    <small>Signed on @lease.SignedAt.Value.ToString("dd MMM yyyy HH:mm")</small>
                                </div>
                            }
                            
                            @if (lease.GeneratedAt.HasValue)
                            {
                                <div class="mb-2">
                                    <small class="text-muted">Generated: @lease.GeneratedAt.Value.ToString("dd MMM yyyy HH:mm")</small>
                                </div>
                            }
                            
                            @if (lease.SentToTenantAt.HasValue)
                            {
                                <div class="mb-2">
                                    <small class="text-muted">Sent for signing: @lease.SentToTenantAt.Value.ToString("dd MMM yyyy HH:mm")</small>
                                </div>
                            }
                        </div>
                        <div class="card-footer bg-transparent">
                            <div class="d-grid gap-2">
                                @if (canSign)
                                {
                                    <a asp-action="SignLease" asp-route-leaseAgreementId="@lease.LeaseAgreementId" 
                                       class="btn btn-primary">
                                        <i class="bi bi-pen me-1"></i>Sign Lease Agreement
                                    </a>
                                }

                                @if (!string.IsNullOrEmpty(lease.GeneratedPdfPath) || !string.IsNullOrEmpty(lease.GeneratedHtmlContent))
                                {
                                    <a asp-action="PreviewLease" asp-route-leaseAgreementId="@lease.LeaseAgreementId" 
                                       class="btn btn-outline-info" target="_blank">
                                        <i class="bi bi-eye me-1"></i>Preview
                                    </a>
                                }

                                @if (canDownload)
                                {
                                    <a asp-action="DownloadSignedLease" asp-route-leaseAgreementId="@lease.LeaseAgreementId" 
                                       class="btn btn-success">
                                        <i class="bi bi-download me-1"></i>Download Signed Lease
                                    </a>
                                }

                                <!-- Status-specific messages -->
                                @switch (status)
                                {
                                    case LeaseAgreement.LeaseStatus.Draft:
                                        <div class="alert alert-info py-2 mb-0">
                                            <i class="bi bi-info-circle me-1"></i>
                                            <small>Lease is being prepared by management</small>
                                        </div>
                                        break;
                                        
                                    case LeaseAgreement.LeaseStatus.Generated:
                                        <div class="alert alert-warning py-2 mb-0">
                                            <i class="bi bi-clock me-1"></i>
                                            <small>Waiting for manager to send for signing</small>
                                        </div>
                                        break;
                                        
                                    case LeaseAgreement.LeaseStatus.Sent when !lease.IsDigitallySigned:
                                        <div class="alert alert-primary py-2 mb-0">
                                            <i class="bi bi-exclamation-circle me-1"></i>
                                            <small>Ready for your signature - please sign above</small>
                                        </div>
                                        break;
                                        
                                    case LeaseAgreement.LeaseStatus.Signed:
                                        <div class="alert alert-success py-2 mb-0">
                                            <i class="bi bi-check-circle me-1"></i>
                                            <small>Lease fully executed and signed</small>
                                        </div>
                                        break;
                                        
                                    case LeaseAgreement.LeaseStatus.Completed:
                                        <div class="alert alert-success py-2 mb-0">
                                            <i class="bi bi-check-circle-fill me-1"></i>
                                            <small>Lease completed successfully</small>
                                        </div>
                                        break;
                                        
                                    case LeaseAgreement.LeaseStatus.Cancelled:
                                        <div class="alert alert-danger py-2 mb-0">
                                            <i class="bi bi-x-circle me-1"></i>
                                            <small>Lease has been cancelled</small>
                                        </div>
                                        break;
                                }
                            </div>
                        </div>
                    </div>
                </div>
            }
        </div>
    }
</div>

@functions {
    public string GetOrdinalNumber(int number)
    {
        var suffix = "th";
        if (number % 100 < 11 || number % 100 > 13)
        {
            switch (number % 10)
            {
                case 1: suffix = "st"; break;
                case 2: suffix = "nd"; break;
                case 3: suffix = "rd"; break;
            }
        }
        return $"{number}{suffix}";
    }

    public (string DisplayName, string CssClass) GetStatusInfo(LeaseAgreement.LeaseStatus status)
    {
        return status switch
        {
            LeaseAgreement.LeaseStatus.Draft => ("Draft", "bg-secondary"),
            LeaseAgreement.LeaseStatus.Generated => ("Generated", "bg-info"),
            LeaseAgreement.LeaseStatus.Sent => ("Awaiting Signature", "bg-warning text-dark"),
            LeaseAgreement.LeaseStatus.Signed => ("Signed", "bg-success"),
            LeaseAgreement.LeaseStatus.Completed => ("Completed", "bg-primary"),
            LeaseAgreement.LeaseStatus.Cancelled => ("Cancelled", "bg-danger"),
            _ => ("Unknown", "bg-secondary")
        };
    }
}