@model IEnumerable<PropertyManagement.Web.ViewModels.LeaseTemplateViewModel>
@{
    ViewData["Title"] = "Lease Templates";
}

<div class="card shadow-lg" style="font-size: 1.15rem;">
    <div class="card-header bg-primary text-white d-flex align-items-center justify-content-between">
        <h2 class="mb-0 display-6"><i class="bi bi-file-text"></i> Lease Templates</h2>
        <a class="btn btn-light text-primary fw-bold" asp-action="CreateTemplate">
            <i class="bi bi-plus-circle"></i> Create Template
        </a>
    </div>
    <div class="card-body p-4" style="background-color: #f8f9fa;">
        <!-- Search Component -->
        @{
            ViewData["SearchId"] = "templates-search";
            ViewData["SearchPlaceholder"] = "Search templates by name or description...";
            ViewData["SearchLabel"] = "Search Templates";
            ViewData["ShowExtraActions"] = true;
            ViewData["ExtraActionsContent"] = "<button class='btn btn-outline-secondary btn-sm' onclick='exportTemplates()'><i class='bi bi-download'></i> Export</button><button class='btn btn-outline-primary btn-sm' onclick='refreshTemplates()'><i class='bi bi-arrow-clockwise'></i> Refresh</button>";
        }
        @await Html.PartialAsync("_TableSearch")

        @if (Model.Any())
        {
            <!-- Templates Table with Pagination -->
            <table class="table table-striped table-bordered align-middle mb-0" 
                   id="templatesTable"
                   data-datatable
                   data-page-length="10"
                   data-search-label="Search templates:"
                   data-empty-message="No templates found">
                <thead class="table-light">
                    <tr>
                        <th>Template Name</th>
                        <th>Description</th>
                        <th>Content Preview</th>
                        <th>Created Date</th>
                        <th style="width: 150px;">Actions</th>
                    </tr>
                </thead>
                <tbody>
                    @foreach (var template in Model)
                    {
                        <tr>
                            <td>
                                <div class="fw-semibold">@template.Name</div>
                                @if (template.IsDefault)
                                {
                                    <span class="badge bg-primary-subtle text-primary-emphasis px-2 py-1 fw-semibold">
                                        <i class="bi bi-star-fill me-1"></i>Default
                                    </span>
                                }
                            </td>
                            <td>
                                <span class="text-muted">@(template.Description ?? "No description provided")</span>
                            </td>
                            <td>
                                <div class="content-preview">
                                    @if (!string.IsNullOrEmpty(template.HtmlContent))
                                    {
                                        <span class="text-truncate d-inline-block" style="max-width: 300px;" title="@template.HtmlContent">
                                            @(template.HtmlContent.Length > 100 ? template.HtmlContent.Substring(0, 100) + "..." : template.HtmlContent)
                                        </span>
                                    }
                                    else
                                    {
                                        <span class="text-muted fst-italic">No content</span>
                                    }
                                </div>
                            </td>
                            <td>
                                <div class="fw-medium">@template.CreatedAt.ToString("MMM dd, yyyy")</div>
                                <div class="text-muted small">@template.CreatedAt.ToString("dddd")</div>
                            </td>
                            <td>
                                <div class="btn-group" role="group" aria-label="Template actions">
                                    <a class="btn btn-sm btn-outline-primary" 
                                       asp-action="EditTemplate" 
                                       asp-route-id="@template.LeaseTemplateId" 
                                       title="Edit Template">
                                        <i class="bi bi-pencil-square"></i>
                                    </a>
                                    <button type="button" 
                                            class="btn btn-sm btn-outline-success" 
                                            onclick="previewTemplate(@template.LeaseTemplateId)" 
                                            title="Preview Template">
                                        <i class="bi bi-eye"></i>
                                    </button>
                                    @if (!template.IsDefault)
                                    {
                                        <button type="button" 
                                                class="btn btn-sm btn-outline-danger" 
                                                onclick="deleteTemplate(@template.LeaseTemplateId, '@template.Name')" 
                                                title="Delete Template">
                                            <i class="bi bi-trash"></i>
                                        </button>
                                    }
                                </div>
                            </td>
                        </tr>
                    }
                </tbody>
            </table>
        }
        else
        {
            <!-- Empty State -->
            <div class="text-center py-5">
                <div class="mb-3">
                    <i class="bi bi-file-text display-1 text-muted"></i>
                </div>
                <h4 class="text-muted">No Lease Templates Found</h4>
                <p class="text-muted mb-4">Get started by creating your first lease template.</p>
                <a class="btn btn-primary" asp-action="CreateTemplate">
                    <i class="bi bi-plus-circle me-2"></i> Create Your First Template
                </a>
            </div>
        }
    </div>
</div>

<!-- Delete Confirmation Modal -->
<div class="modal fade" id="deleteTemplateModal" tabindex="-1" aria-labelledby="deleteTemplateModalLabel" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header bg-danger text-white">
                <h5 class="modal-title" id="deleteTemplateModalLabel">
                    <i class="bi bi-exclamation-triangle me-2"></i>Delete Template
                </h5>
                <button type="button" class="btn-close btn-close-white" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body">
                <p class="mb-3">Are you sure you want to delete the template <strong id="templateNameToDelete"></strong>?</p>
                <div class="alert alert-warning">
                    <i class="bi bi-exclamation-triangle me-2"></i>
                    <strong>This action cannot be undone.</strong> All lease agreements using this template will no longer have access to it.
                </div>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">
                    <i class="bi bi-x-circle me-1"></i>Cancel
                </button>
                <form id="deleteTemplateForm" method="post" style="display: inline;">
                    @Html.AntiForgeryToken()
                    <button type="submit" class="btn btn-danger">
                        <i class="bi bi-trash me-1"></i>Delete Template
                    </button>
                </form>
            </div>
        </div>
    </div>
</div>

<!-- Template Preview Modal -->
<div class="modal fade" id="templatePreviewModal" tabindex="-1" aria-labelledby="templatePreviewModalLabel" aria-hidden="true">
    <div class="modal-dialog modal-xl">
        <div class="modal-content">
            <div class="modal-header bg-info text-white">
                <h5 class="modal-title" id="templatePreviewModalLabel">
                    <i class="bi bi-eye me-2"></i>Template Preview
                </h5>
                <button type="button" class="btn-close btn-close-white" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body">
                <div id="templatePreviewContent" class="border rounded p-3" style="max-height: 60vh; overflow-y: auto; background-color: #f8f9fa;">
                    <!-- Template content will be loaded here -->
                </div>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">
                    <i class="bi bi-x-circle me-1"></i>Close
                </button>
            </div>
        </div>
    </div>
</div>

<style>
.content-preview {
    font-family: 'Courier New', monospace;
    font-size: 0.9rem;
    background-color: #f8f9fa;
    padding: 0.5rem;
    border-radius: 0.375rem;
    border: 1px solid #dee2e6;
}

.btn-group .btn {
    border-radius: 0;
    margin: 0;
}

.btn-group .btn:first-child {
    border-top-left-radius: 0.375rem;
    border-bottom-left-radius: 0.375rem;
}

.btn-group .btn:last-child {
    border-top-right-radius: 0.375rem;
    border-bottom-right-radius: 0.375rem;
}

.btn-group .btn + .btn {
    margin-left: -1px;
}
</style>

<script>
function deleteTemplate(templateId, templateName) {
    document.getElementById('templateNameToDelete').textContent = templateName;
    document.getElementById('deleteTemplateForm').action = '@Url.Action("DeleteTemplate")/' + templateId;
    
    var modal = new bootstrap.Modal(document.getElementById('deleteTemplateModal'));
    modal.show();
}

function previewTemplate(templateId) {
    const modal = new bootstrap.Modal(document.getElementById('templatePreviewModal'));
    const previewContent = document.getElementById('templatePreviewContent');
    
    // Show loading state
    previewContent.innerHTML = '<div class="text-center py-4"><div class="spinner-border text-primary" role="status"><span class="visually-hidden">Loading...</span></div><div class="mt-2">Loading template preview...</div></div>';
    
    modal.show();
    
    // TODO: Implement template preview endpoint
    // For now, show a placeholder message
    setTimeout(() => {
        previewContent.innerHTML = '<div class="alert alert-info"><i class="bi bi-info-circle me-2"></i><strong>Preview Feature Coming Soon</strong><br>Template preview functionality will be implemented in a future update.</div>';
    }, 1000);
}

function exportTemplates() {
    // TODO: Implement export functionality
    console.log('Export templates functionality not yet implemented');
}

function refreshTemplates() {
    window.location.reload();
}
</script>