@model IEnumerable<PropertyManagement.Web.ViewModels.LeaseAgreementViewModel>
@using PropertyManagement.Domain.Entities
@{
  ViewData["Title"] = "Lease Agreements";
  var tenants = ViewBag.Tenants as List<PropertyManagement.Web.ViewModels.TenantViewModel>;
  var expiringIds = ViewBag.ExpiringIds as List<int> ?? new List<int>();
  var overdueIds = ViewBag.OverdueIds as List<int> ?? new List<int>();
}

<!-- Page Header -->
<div class="page-header mb-4">
  <div class="d-flex justify-content-between align-items-center">
    <div class="page-title">
      <h1 class="page-title-main">
        <div class="page-icon">
          <i class="bi bi-file-earmark-text"></i>
        </div>
        Lease Agreements
      </h1>
      <p class="page-title-sub text-secondary mb-0">Manage traditional and digital lease agreements</p>
    </div>
    <div class="page-actions">
      <div class="d-flex align-items-center gap-3">
        <div class="page-info text-center">
          <div class="text-secondary small">Total Agreements</div>
          <div class="fw-semibold">@Model.Count()</div>
        </div>
        <div class="page-info text-center">
          <div class="text-secondary small">Expiring Soon</div>
          <div class="fw-semibold text-warning">@expiringIds.Count</div>
        </div>
        <div class="page-info text-center">
          <div class="text-secondary small">Overdue</div>
          <div class="fw-semibold text-danger">@overdueIds.Count</div>
        </div>
        <a asp-controller="DigitalLease" asp-action="Templates" class="btn btn-outline-primary">
          <i class="bi bi-file-earmark-code"></i>
          Templates
        </a>
        <a asp-action="Create" class="btn btn-primary page-action-btn primary">
          <i class="bi bi-plus-circle"></i>
          Add Agreement
        </a>
      </div>
    </div>
  </div>
</div>

<!-- Lease Agreements Table Container -->
<div class="content-section">
  <div class="card-elevated">
    <div class="card-header">
      <h5 class="card-title mb-0">
        <i class="bi bi-file-earmark-text me-2"></i>
        Lease Agreements Directory
      </h5>
      <p class="card-description">Complete list of all lease agreements with tenant and property details</p>
    </div>
    <div class="card-body p-0">
      <div class="table-responsive">
        <table class="table table-striped table-bordered align-middle mb-0"
             id="leasesTable"
             data-datatable
             data-page-length="10"
             data-search-label="Search leases:"
             data-empty-message="No lease agreements found">
        <thead class="table-light">
          <tr>
            <th>Tenant</th>
            <th>Room</th>
            <th>Start Date</th>
            <th>End Date</th>
            <th>Rent (R)</th>
            <th>Rent Due</th>
            <th>Status</th>
            <th>Document</th>
            <th style="width: 200px;">Actions</th>
          </tr>
        </thead>
        <tbody>
          @if (Model.Any())
          {
            @foreach (var agreement in Model)
            {
              var status = agreement.Status;
              var statusInfo = GetStatusInfo(status);
              var hasDigitalContent = !string.IsNullOrEmpty(agreement.GeneratedHtmlContent) || !string.IsNullOrEmpty(agreement.GeneratedPdfPath);
              var isDigitallySigned = agreement.IsDigitallySigned;

              <tr class="@(overdueIds.Contains(agreement.LeaseAgreementId) ? "table-danger" : expiringIds.Contains(agreement.LeaseAgreementId) ? "table-warning" : "")">
                <td>
                  <div class="d-flex align-items-center">
                    <div class="tenant-avatar me-2">
                      <i class="bi bi-person-circle text-primary"></i>
                    </div>
                    <div>
                      <div class="fw-semibold">@agreement.Tenant?.FullName</div>
                      @if (isDigitallySigned)
                      {
                        <small class="text-success">
                          <i class="bi bi-shield-check me-1"></i>Digitally Signed
                        </small>
                      }
                    </div>
                  </div>
                </td>
                <td>
                  <span class="badge bg-primary-subtle text-primary-emphasis px-2 py-1">
                    <i class="bi bi-door-closed me-1"></i>
                    Room @agreement.Tenant?.Room?.Number
                  </span>
                </td>
                <td>@agreement.StartDate.ToString("dd MMM yyyy")</td>
                <td>
                  @agreement.EndDate.ToString("dd MMM yyyy")
                  @if (overdueIds.Contains(agreement.LeaseAgreementId))
                  {
                    <span class="badge bg-danger ms-2">Overdue</span>
                  }
                  else if (expiringIds.Contains(agreement.LeaseAgreementId))
                  {
                    <span class="badge bg-warning text-dark ms-2">Expiring Soon</span>
                  }
                </td>
                <td class="fw-bold text-success">@agreement.RentAmount.ToString("C", System.Globalization.CultureInfo.GetCultureInfo("en-ZA"))</td>
                <td>@GetOrdinalNumber(agreement.ExpectedRentDay)</td>
                <td>
                  <span class="badge @statusInfo.CssClass">@statusInfo.DisplayName</span>
                </td>
                <td>
                  @if (hasDigitalContent && !string.IsNullOrEmpty(agreement.GeneratedPdfPath))
                  {
                    <a href="@agreement.GeneratedPdfPath" target="_blank" class="text-decoration-none">
                      <i class="bi bi-file-earmark-pdf text-danger"></i> Digital PDF
                    </a>
                  }
                  else if (!string.IsNullOrEmpty(agreement.FilePath))
                  {
                    <a href="@agreement.FilePath" target="_blank" class="text-decoration-none">
                      <i class="bi bi-file-earmark-pdf text-primary"></i> Uploaded
                    </a>
                  }
                  else
                  {
                    <span class="text-muted">No document</span>
                  }
                </td>
                <td class="text-center">
                  <div class="btn-group" role="group" aria-label="Lease agreement actions">
                    <!-- Edit Action -->
                    <a asp-action="Edit" asp-route-id="@agreement.LeaseAgreementId" 
                       class="btn btn-sm btn-outline-primary" 
                       title="Edit Details">
                      <i class="bi bi-pencil-square"></i>
                    </a>
                    
                    <!-- Generate/Send/Preview Digital Lease -->
                    @if (status < LeaseAgreement.LeaseStatus.Generated)
                    {
                      <form asp-controller="DigitalLease" asp-action="GenerateLease" method="post" class="m-0 d-inline-block" 
                            onsubmit="showGenerateSpinner(this, @agreement.LeaseAgreementId); return true;">
                        <input type="hidden" name="leaseAgreementId" value="@agreement.LeaseAgreementId" />
                        <button type="submit" 
                                class="btn btn-sm btn-outline-info" 
                                id="generate-btn-@agreement.LeaseAgreementId" 
                                title="Generate Digital Lease">
                          <i class="bi bi-gear-fill"></i>
                        </button>
                      </form>
                    }
                    else if (status == LeaseAgreement.LeaseStatus.Generated)
                    {
                      <form asp-controller="DigitalLease" asp-action="SendToTenant" method="post" class="m-0 d-inline-block">
                        <input type="hidden" name="leaseAgreementId" value="@agreement.LeaseAgreementId" />
                        <button type="submit" 
                                class="btn btn-sm btn-outline-warning" 
                                title="Send to Tenant">
                          <i class="bi bi-send-fill"></i>
                        </button>
                      </form>
                    }
                    
                    @if (hasDigitalContent)
                    {
                      <a class="btn btn-sm btn-outline-info" 
                         href="@Url.Action("PreviewLease", "DigitalLease", new { leaseAgreementId = agreement.LeaseAgreementId })" 
                         target="_blank" 
                         title="Preview Digital Lease">
                        <i class="bi bi-eye-fill"></i>
                      </a>
                    }
                    
                    @if (isDigitallySigned)
                    {
                      <a class="btn btn-sm btn-outline-success" 
                         href="@agreement.GeneratedPdfPath" 
                         target="_blank" 
                         title="Download Signed PDF">
                        <i class="bi bi-download"></i>
                      </a>
                    }
                    
                    <!-- Delete Action -->
                    @await Html.PartialAsync(
                        "_DeleteModal",
                        new PropertyManagement.Web.ViewModels.DeleteModalViewModel {
                            ModalId = $"deleteModal-{agreement.LeaseAgreementId}",
                            ModalLabelId = $"deleteModalLabel-{agreement.LeaseAgreementId}",
                            Title = "Delete Lease",
                            Body = $"Are you sure you want to delete Lease for <strong>{agreement.Tenant?.FullName}</strong>?",
                            Action = "Delete",
                            Controller = "LeaseAgreements",
                            EntityId = agreement.LeaseAgreementId
                        }
                    )
                  </div>
                </td>
              </tr>
            }
          }
          else
          {
            <tr>
              <td colspan="9">
                <div class="empty-state">
                  <i class="bi bi-file-earmark-text empty-state-icon"></i>
                  <h3 class="empty-state-title">No Lease Agreements Found</h3>
                  <p class="empty-state-description">
                    Start managing your property leases by creating your first lease agreement. 
                    You can create traditional lease agreements or generate digital ones for tenants to sign online.
                  </p>
                  <a asp-action="Create" class="empty-state-action">
                    <i class="bi bi-plus-circle"></i>
                    Create First Lease Agreement
                  </a>
                </div>
              </td>
            </tr>
          }
        </tbody>
        </table>
      </div>
    </div>
  </div>
</div>

<!-- Professional Lease Generation Loading Modal -->
<div id="leaseGenerationModal" class="custom-modal" style="display: none;">
  <div class="custom-modal-backdrop"></div>
  <div class="custom-modal-content">
    <div class="custom-modal-header">
      <h4 class="custom-modal-title">
        <i class="bi bi-hourglass-split me-2"></i>
        <span>Generating Digital Lease</span>
      </h4>
    </div>
    <div class="custom-modal-body">
      
      <div class="row g-4">
        <div class="col-12">
          <div class="alert alert-info border-info">
            <div class="d-flex align-items-center mb-3">
              <div class="spinner-border text-info me-3" role="status">
                <span class="visually-hidden">Loading...</span>
              </div>
              <div>
                <h5 class="alert-heading mb-1 text-info">Generating Digital Lease</h5>
                <p class="mb-0">Creating your professional lease document...</p>
              </div>
            </div>
          </div>
          
          <div class="card border-info bg-light">
            <div class="card-body p-3">
              <h6 class="card-title text-info mb-2">
                <i class="bi bi-info-circle"></i> Processing Information
              </h6>
              <div id="generationSummary">
                <p class="mb-1"><strong>Status:</strong> <span class="text-info">In Progress</span></p>
                <p class="mb-1"><strong>Step:</strong> <span id="generationStep">Processing lease data</span></p>
                <p class="mb-0"><strong>Document Type:</strong> <span>Professional PDF Lease</span></p>
              </div>
            </div>
          </div>
        </div>
      </div>

    </div>
  </div>
</div>

@section Styles {
  <style>
    /* Custom Modal Styles */
    .custom-modal {
      position: fixed;
      top: 0;
      left: 0;
      width: 100%;
      height: 100%;
      z-index: 1050;
      display: flex;
      align-items: center;
      justify-content: center;
    }
    
    .custom-modal-backdrop {
      position: absolute;
      top: 0;
      left: 0;
      width: 100%;
      height: 100%;
      background-color: rgba(0, 0, 0, 0.4);
    }
    
    .custom-modal-content {
      position: relative;
      background: white;
      border-radius: 8px;
      width: 90%;
      max-width: 900px;
      max-height: 90vh;
      overflow: hidden;
      box-shadow: 0 4px 20px rgba(0, 0, 0, 0.15);
      border: 1px solid #dee2e6;
      z-index: 1051;
    }
    
    .custom-modal-header {
      background: #f8f9fa;
      color: #495057;
      padding: 1.25rem 1.5rem;
      display: flex;
      justify-content: space-between;
      align-items: center;
      border-bottom: 1px solid #dee2e6;
    }
    
    .custom-modal-title {
      margin: 0;
      font-size: 1.125rem;
      font-weight: 600;
      display: flex;
      align-items: center;
      color: #212529;
    }
    
    .custom-modal-close {
      background: none;
      border: none;
      color: #6c757d;
      font-size: 1.25rem;
      cursor: pointer;
      padding: 0.25rem;
      border-radius: 4px;
      width: 32px;
      height: 32px;
      display: flex;
      align-items: center;
      justify-content: center;
      transition: all 0.15s ease;
    }
    
    .custom-modal-close:hover {
      background-color: #e9ecef;
      color: #495057;
    }
    
    .custom-modal-body {
      padding: 1.5rem;
      max-height: calc(90vh - 100px);
      overflow-y: auto;
    }
    
    .loading-state {
      text-align: center;
      padding: 3rem 0;
    }
    
    
    /* Responsive Design */
    @@media (max-width: 768px) {
      .custom-modal-content {
        width: 95%;
        max-height: 95vh;
        margin: 1rem;
      }
      
      .custom-modal-header {
        padding: 1rem 1.5rem;
      }
      
      .custom-modal-body {
        padding: 1.5rem;
        max-height: calc(95vh - 100px);
      }
      
      .custom-modal-title {
        font-size: 1.1rem;
      }
    }
    
    /* Smooth scrollbar for modal body */
    .custom-modal-body::-webkit-scrollbar {
      width: 6px;
    }
    
    .custom-modal-body::-webkit-scrollbar-track {
      background: #f1f1f1;
      border-radius: 3px;
    }
    
    .custom-modal-body::-webkit-scrollbar-thumb {
      background: #c1c1c1;
      border-radius: 3px;
    }
    
    .custom-modal-body::-webkit-scrollbar-thumb:hover {
      background: #a1a1a1;
    }
  </style>
}

@section Scripts {
  <script>
    function showGenerateSpinner(form, leaseId) {
        // Show the custom modal
        var modal = document.getElementById('leaseGenerationModal');
        modal.style.display = 'flex';
        document.body.style.overflow = 'hidden';
        
        // Update the button to show it's processing
        const button = document.getElementById('generate-btn-' + leaseId);
        if (button) {
            const originalContent = button.innerHTML;
            button.innerHTML = '<i class="bi bi-hourglass-split text-info"></i> Generating...';
            button.disabled = true;
        }
        
        // Update generation steps
        setTimeout(() => updateGenerationStep('Generating document'), 1000);
        setTimeout(() => updateGenerationStep('Creating PDF'), 2000);
        setTimeout(() => updateGenerationStep('Finalizing lease'), 3000);
        
        // The form will submit normally, and the page will reload showing the result
        return true;
    }
    
    function closeGenerationModal() {
        var modal = document.getElementById('leaseGenerationModal');
        modal.style.display = 'none';
        document.body.style.overflow = 'auto';
    }
    
    function updateGenerationStep(stepText) {
        const stepElement = document.getElementById('generationStep');
        if (stepElement) {
            stepElement.textContent = stepText;
        }
    }
  </script>
}

@functions {
    public string GetOrdinalNumber(int number)
    {
        var suffix = "th";
        if (number % 100 < 11 || number % 100 > 13)
        {
            switch (number % 10)
            {
                case 1: suffix = "st"; break;
                case 2: suffix = "nd"; break;
                case 3: suffix = "rd"; break;
            }
        }
        return $"{number}{suffix}";
    }

    public (string DisplayName, string CssClass) GetStatusInfo(LeaseAgreement.LeaseStatus status)
    {
        return status switch
        {
            LeaseAgreement.LeaseStatus.Draft => ("Draft", "bg-secondary"),
            LeaseAgreement.LeaseStatus.Generated => ("Generated", "bg-info"),
            LeaseAgreement.LeaseStatus.Sent => ("Awaiting Signature", "bg-warning text-dark"),
            LeaseAgreement.LeaseStatus.Signed => ("Signed", "bg-success"),
            LeaseAgreement.LeaseStatus.Completed => ("Completed", "bg-primary"),
            LeaseAgreement.LeaseStatus.Cancelled => ("Cancelled", "bg-danger"),
            _ => ("Unknown", "bg-secondary")
        };
    }
}