@model IEnumerable<PropertyManagement.Web.ViewModels.PaymentViewModel>
@{
  ViewData["Title"] = "Payments";
  var tenants = ViewBag.Tenants as List<PropertyManagement.Web.ViewModels.TenantViewModel>;
  var totalPayments = Model.Sum(p => p.Amount);
  var thisMonthPayments = Model.Where(p => p.Date.Month == DateTime.Now.Month && p.Date.Year == DateTime.Now.Year).Sum(p => p.Amount);
  var outstandingCount = tenants?.Where(t => t.OutstandingBalance > 0).Count() ?? 0;
}

<!-- Page Header -->
<div class="page-header mb-4">
  <div class="d-flex justify-content-between align-items-center">
    <div class="page-title">
      <h1 class="page-title-main">
        <div class="page-icon">
          <i class="bi bi-cash-coin"></i>
        </div>
        Payments
      </h1>
      <p class="page-title-sub text-secondary mb-0">Track rent payments, outstanding balances, and generate financial reports</p>
    </div>
    <div class="page-actions">
      <div class="d-flex align-items-center gap-3">
        <div class="page-info text-center">
          <div class="text-secondary small">Total Payments</div>
          <div class="fw-semibold">@Model.Count()</div>
        </div>
        <div class="page-info text-center">
          <div class="text-secondary small">This Month</div>
          <div class="fw-semibold text-success">@thisMonthPayments.ToString("C")</div>
        </div>
        @if (outstandingCount > 0)
        {
          <div class="page-info text-center">
            <div class="text-secondary small">Outstanding</div>
            <div class="fw-semibold text-warning">@outstandingCount Tenants</div>
          </div>
        }
      </div>
    </div>
  </div>
</div>

<!-- Payments Management Container -->
<div class="content-section">
  <div class="card-elevated">
    <!-- Professional Tab Navigation -->
    <div class="nav-tabs-container">
      <ul class="nav nav-tabs nav-tabs-professional" id="paymentsTab" role="tablist">
        <li class="nav-item" role="presentation">
          <button class="nav-link active" id="payments-tab" data-bs-toggle="tab" data-bs-target="#payments" type="button" role="tab" aria-controls="payments" aria-selected="true">
            <i class="bi bi-credit-card me-2"></i>
            Payment History
            <span class="nav-badge bg-success">@Model.Count()</span>
          </button>
        </li>
        <li class="nav-item" role="presentation">
          <button class="nav-link" id="balances-tab" data-bs-toggle="tab" data-bs-target="#balances" type="button" role="tab" aria-controls="balances" aria-selected="false">
            <i class="bi bi-exclamation-triangle me-2"></i>
            Outstanding Balances
            @if (outstandingCount > 0)
            {
              <span class="nav-badge bg-warning">@outstandingCount</span>
            }
            else
            {
              <span class="nav-badge bg-success">0</span>
            }
          </button>
        </li>
      </ul>
    </div>
    <div class="tab-content" id="paymentsTabContent">
      <div class="tab-pane fade show active" id="payments" role="tabpanel" aria-labelledby="payments-tab">
        @await Html.PartialAsync("_PaymentsTable", Model)
      </div>
      <div class="tab-pane fade" id="balances" role="tabpanel" aria-labelledby="balances-tab">
        @await Html.PartialAsync("_OutstandingBalances", tenants)
      </div>
    </div>
  </div>
</div>

<!-- Payment Modal -->
<div class="modal fade" id="paymentModal" tabindex="-1" aria-labelledby="paymentModalLabel" aria-hidden="true">
  <div class="modal-dialog modal-dialog-centered" style="max-width: 500px;">
    <div class="modal-content shadow-lg border-0">
      <div class="modal-header bg-primary text-white py-2">
        <h5 class="modal-title" id="paymentModalLabel">Add Payment</h5>
        <button type="button" class="btn-close btn-close-white" data-bs-dismiss="modal" aria-label="Close"></button>
      </div>
      <div class="modal-body p-3 custom-modal-body" id="paymentModalBody" style="background-color: #f8f9fa;">
        <!-- Form will be loaded here via AJAX -->
      </div>
    </div>
  </div>
</div>

<!-- Receipt Modal -->
<div class="modal fade" id="receiptModal" tabindex="-1" aria-labelledby="receiptModalLabel" aria-hidden="true">
  <div class="modal-dialog modal-lg">
    <div class="modal-content">
      <div class="modal-header bg-primary text-white">
        <h5 class="modal-title" id="receiptModalLabel"><i class="bi bi-receipt"></i> Payment Receipt</h5>
        <button type="button" class="btn-close btn-close-white" data-bs-dismiss="modal" aria-label="Close"></button>
      </div>
      <div class="modal-body" id="receiptModalBody">
        <!-- Receipt partial loads here -->
      </div>
    </div>
  </div>
</div>

<!-- Custom Delete Modal - Matching Rooms Design -->
<div id="deleteModal" class="custom-modal" style="display: none;">
  <div class="custom-modal-backdrop" onclick="closeDeleteModal()"></div>
  <div class="custom-modal-content">
    <div class="custom-modal-header">
      <h4 class="custom-modal-title">
        <i class="bi bi-exclamation-triangle-fill me-2"></i>
        <span id="deleteModalTitle">Confirm Delete</span>
      </h4>
      <button type="button" class="custom-modal-close" onclick="closeDeleteModal()">
        <i class="bi bi-x-lg"></i>
      </button>
    </div>
    <div class="custom-modal-body" id="deleteModalBody">
      <!-- Delete form content will be loaded here -->
    </div>
  </div>
</div>


@section Styles {
  <style>
    /* Custom Modal Styles - Matching Rooms Design */
    .custom-modal {
      position: fixed;
      top: 0;
      left: 0;
      width: 100%;
      height: 100%;
      z-index: 1050;
      display: flex;
      align-items: center;
      justify-content: center;
    }
    
    .custom-modal-backdrop {
      position: absolute;
      top: 0;
      left: 0;
      width: 100%;
      height: 100%;
      background-color: rgba(0, 0, 0, 0.4);
    }
    
    .custom-modal-content {
      position: relative;
      background: white;
      border-radius: 8px;
      width: 90%;
      max-width: 900px;
      max-height: 90vh;
      overflow: hidden;
      box-shadow: 0 4px 20px rgba(0, 0, 0, 0.15);
      border: 1px solid #dee2e6;
      z-index: 1051;
    }
    
    .custom-modal-header {
      background: #f8f9fa;
      color: #495057;
      padding: 1.25rem 1.5rem;
      display: flex;
      justify-content: space-between;
      align-items: center;
      border-bottom: 1px solid #dee2e6;
    }
    
    .custom-modal-title {
      margin: 0;
      font-size: 1.125rem;
      font-weight: 600;
      display: flex;
      align-items: center;
      color: #212529;
    }
    
    .custom-modal-close {
      background: none;
      border: none;
      color: #6c757d;
      font-size: 1.25rem;
      cursor: pointer;
      padding: 0.25rem;
      border-radius: 4px;
      width: 32px;
      height: 32px;
      display: flex;
      align-items: center;
      justify-content: center;
      transition: all 0.15s ease;
    }
    
    .custom-modal-close:hover {
      background-color: #e9ecef;
      color: #495057;
    }
    
    .custom-modal-body {
      padding: 1.5rem;
      max-height: calc(90vh - 100px);
      overflow-y: auto;
    }
    
    /* Responsive Design */
    @@media (max-width: 768px) {
      .custom-modal-content {
        width: 95%;
        max-height: 95vh;
        margin: 1rem;
      }
      
      .custom-modal-header {
        padding: 1rem 1.5rem;
      }
      
      .custom-modal-body {
        padding: 1.5rem;
        max-height: calc(95vh - 100px);
      }
      
      .custom-modal-title {
        font-size: 1.1rem;
      }
    }
    
    /* Smooth scrollbar for modal body */
    .custom-modal-body::-webkit-scrollbar {
      width: 6px;
    }
    
    .custom-modal-body::-webkit-scrollbar-track {
      background: #f1f1f1;
      border-radius: 3px;
    }
    
    .custom-modal-body::-webkit-scrollbar-thumb {
      background: #c1c1c1;
      border-radius: 3px;
    }
    
    .custom-modal-body::-webkit-scrollbar-thumb:hover {
      background: #a1a1a1;
    }
  </style>
}

@section Scripts {
  <script>
    function openAddPaymentModal() {
      fetch('/Payments/PaymentForm')
        .then(response => {
          if (!response.ok) {
            throw new Error('Network response was not ok');
          }
          return response.text();
        })
        .then(html => {
          document.getElementById('paymentModalLabel').innerText = 'Add Payment';
          document.getElementById('paymentModalBody').innerHTML = html;
          var modal = new bootstrap.Modal(document.getElementById('paymentModal'));
          modal.show();
        })
        .catch(error => {
          console.error('Error loading payment form:', error);
          alert('Error loading payment form. Please try again.');
        });
    }

    function openEditPaymentModal(id) {
      fetch('/Payments/PaymentForm?id=' + id)
        .then(response => response.text())
        .then(html => {
          document.getElementById('paymentModalLabel').innerText = 'Edit Payment';
          document.getElementById('paymentModalBody').innerHTML = html;
          var modal = new bootstrap.Modal(document.getElementById('paymentModal'));
          modal.show();
        })
        .catch(error => {
          console.error('Error loading payment form:', error);
          alert('Error loading payment form. Please try again.');
        });
    }


    function showReceiptModal(paymentId) {
      fetch('/Payments/ReceiptPartial/' + paymentId)
        .then(response => response.text())
        .then(html => {
          document.getElementById('receiptModalBody').innerHTML = html;
          var modal = new bootstrap.Modal(document.getElementById('receiptModal'));
          modal.show();
        });
    }


    // Delete Modal Functions - Matching Rooms Implementation
    function openDeleteModal(entityId, tenantName, paymentDetails) {
        var modal = document.getElementById('deleteModal');
        var modalTitle = document.getElementById('deleteModalTitle');
        var modalBody = document.getElementById('deleteModalBody');
        
        modalTitle.textContent = 'Delete Payment';
        
        // Create delete form content with professional styling - EXACTLY like Rooms
        modalBody.innerHTML = `
            <!-- Form Error Display -->
            <div id="formErrors" class="alert alert-danger" style="display: none;"></div>
            <div id="formSuccess" class="alert alert-success" style="display: none;"></div>

            <form id="deleteForm" action="/Payments/Delete" method="post" class="needs-validation" novalidate>
                <input name="__RequestVerificationToken" type="hidden" value="${document.querySelector('input[name="__RequestVerificationToken"]').value}" />
                <input type="hidden" name="id" value="${entityId}" />
                
                <div class="row g-4">
                    <div class="col-12">
                        <div class="alert alert-danger border-danger">
                            <div class="d-flex align-items-center mb-3">
                                <i class="bi bi-exclamation-triangle-fill text-danger fs-2 me-3"></i>
                                <div>
                                    <h5 class="alert-heading mb-1 text-danger">Delete Payment</h5>
                                    <p class="mb-0">This action cannot be undone.</p>
                                </div>
                            </div>
                            
                            <div class="mb-0">Are you sure you want to delete payment for <strong>${tenantName}</strong>?<br><small class="text-muted">${paymentDetails}</small></div>
                        </div>
                        
                        <div class="card border-info bg-light">
                            <div class="card-body p-3">
                                <h6 class="card-title text-info mb-2">
                                    <i class="bi bi-info-circle"></i> Delete Information
                                </h6>
                                <div>
                                    <p class="mb-1"><strong>Entity ID:</strong> <span>${entityId}</span></p>
                                    <p class="mb-1"><strong>Action:</strong> <span class="text-danger">Permanent Deletion</span></p>
                                    <p class="mb-0"><strong>Controller:</strong> <span>Payments</span></p>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </form>

            <div class="row mt-4">
                <div class="col-12">
                    <div class="d-flex justify-content-end gap-2">
                        <button type="button" class="btn btn-secondary" onclick="closeDeleteModal()">
                            <i class="bi bi-x-circle"></i> Cancel
                        </button>
                        <button type="submit" class="btn btn-danger" form="deleteForm">
                            <i class="bi bi-trash"></i>
                            <span class="submit-text">Delete Permanently</span>
                            <div class="spinner-border spinner-border-sm ms-2" style="display: none;" role="status" aria-hidden="true"></div>
                        </button>
                    </div>
                </div>
            </div>
        `;
        
        modal.style.display = 'flex';
        document.body.style.overflow = 'hidden';
        
        // Add form submit handler
        document.getElementById('deleteForm').addEventListener('submit', function(e) {
            e.preventDefault();
            submitDeleteForm(this);
        });
    }
    
    function closeDeleteModal() {
        var modal = document.getElementById('deleteModal');
        modal.style.display = 'none';
        document.body.style.overflow = 'auto';
    }
    
    function submitDeleteForm(form) {
        var submitBtn = form.querySelector('button[type="submit"]');
        var spinner = submitBtn ? submitBtn.querySelector('.spinner-border') : null;
        var formErrors = document.getElementById('formErrors');
        var formSuccess = document.getElementById('formSuccess');
        
        // Show loading state
        if (submitBtn) submitBtn.disabled = true;
        if (spinner) spinner.style.display = 'inline-block';
        
        // Hide previous messages
        if (formErrors) formErrors.style.display = 'none';
        if (formSuccess) formSuccess.style.display = 'none';
        
        // Submit form via AJAX
        var formData = new FormData(form);
        
        fetch(form.action, {
            method: 'POST',
            body: formData,
            headers: {
                'X-Requested-With': 'XMLHttpRequest'
            }
        })
        .then(response => {
            if (!response.ok) {
                throw new Error('Network response was not ok');
            }
            return response.text();
        })
        .then(result => {
            // Show success message
            if (formSuccess) {
                formSuccess.innerHTML = '<i class="bi bi-check-circle"></i> Payment deleted successfully.';
                formSuccess.style.display = 'block';
            }
            
            // Close modal after short delay and reload page
            setTimeout(() => {
                closeDeleteModal();
                window.location.reload();
            }, 1500);
        })
        .catch(error => {
            console.error('Form submission error:', error);
            if (formErrors) {
                formErrors.innerHTML = '<i class="bi bi-exclamation-triangle"></i> An error occurred while deleting. Please try again.';
                formErrors.style.display = 'block';
            }
        })
        .finally(() => {
            if (submitBtn) submitBtn.disabled = false;
            if (spinner) spinner.style.display = 'none';
        });
    }

    // Close modal on Escape key
    document.addEventListener('keydown', function(e) {
        if (e.key === 'Escape') {
            closeDeleteModal();
        }
    });

  </script>
  <script src="~/js/receipt-utils.js"></script>
}