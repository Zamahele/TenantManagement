@model IEnumerable<PropertyManagement.Web.ViewModels.PaymentViewModel>
@{
  ViewData["Title"] = "Payments";
  var tenants = ViewBag.Tenants as List<PropertyManagement.Web.ViewModels.TenantViewModel>;
  var totalPayments = Model.Sum(p => p.Amount);
  var thisMonthPayments = Model.Where(p => p.Date.Month == DateTime.Now.Month && p.Date.Year == DateTime.Now.Year).Sum(p => p.Amount);
  var outstandingCount = tenants?.Where(t => t.OutstandingBalance > 0).Count() ?? 0;
}

<!-- Page Header -->
<div class="page-header mb-4">
  <div class="d-flex justify-content-between align-items-center">
    <div class="page-title">
      <h1 class="page-title-main">
        <div class="page-icon">
          <i class="bi bi-cash-coin"></i>
        </div>
        Payments
      </h1>
      <p class="page-title-sub text-secondary mb-0">Track rent payments, outstanding balances, and generate financial reports</p>
    </div>
    <div class="page-actions">
      <div class="d-flex align-items-center gap-3">
        <div class="page-info text-center">
          <div class="text-secondary small">Total Payments</div>
          <div class="fw-semibold">@Model.Count()</div>
        </div>
        <div class="page-info text-center">
          <div class="text-secondary small">This Month</div>
          <div class="fw-semibold text-success">@thisMonthPayments.ToString("C")</div>
        </div>
        @if (outstandingCount > 0)
        {
          <div class="page-info text-center">
            <div class="text-secondary small">Outstanding</div>
            <div class="fw-semibold text-warning">@outstandingCount Tenants</div>
          </div>
        }
        <div class="btn-group">
          <button class="btn btn-primary page-action-btn primary" onclick="openAddPaymentModal()">
            <i class="bi bi-plus-circle"></i>
            Add Payment
          </button>
          <button class="btn btn-outline-secondary page-action-btn" onclick="generatePaymentReport()">
            <i class="bi bi-bar-chart"></i>
            Report
          </button>
        </div>
      </div>
    </div>
  </div>
</div>

<!-- Payments Management Container -->
<div class="content-section">
  <div class="card-elevated">
    <!-- Professional Tab Navigation -->
    <div class="nav-tabs-container">
      <ul class="nav nav-tabs nav-tabs-professional" id="paymentsTab" role="tablist">
        <li class="nav-item" role="presentation">
          <button class="nav-link active" id="payments-tab" data-bs-toggle="tab" data-bs-target="#payments" type="button" role="tab" aria-controls="payments" aria-selected="true">
            <i class="bi bi-credit-card me-2"></i>
            Payment History
            <span class="nav-badge bg-success">@Model.Count()</span>
          </button>
        </li>
        <li class="nav-item" role="presentation">
          <button class="nav-link" id="balances-tab" data-bs-toggle="tab" data-bs-target="#balances" type="button" role="tab" aria-controls="balances" aria-selected="false">
            <i class="bi bi-exclamation-triangle me-2"></i>
            Outstanding Balances
            @if (outstandingCount > 0)
            {
              <span class="nav-badge bg-warning">@outstandingCount</span>
            }
            else
            {
              <span class="nav-badge bg-success">0</span>
            }
          </button>
        </li>
      </ul>
    </div>
    <div class="tab-content" id="paymentsTabContent">
      <div class="tab-pane fade show active" id="payments" role="tabpanel" aria-labelledby="payments-tab">
        @await Html.PartialAsync("_PaymentsTable", Model)
      </div>
      <div class="tab-pane fade" id="balances" role="tabpanel" aria-labelledby="balances-tab">
        @await Html.PartialAsync("_OutstandingBalances", tenants)
      </div>
    </div>
  </div>
</div>

<!-- Payment Modal -->
<div class="modal fade" id="paymentModal" tabindex="-1" aria-labelledby="paymentModalLabel" aria-hidden="true">
  <div class="modal-dialog modal-dialog-centered" style="max-width: 500px;">
    <div class="modal-content shadow-lg border-0">
      <div class="modal-header bg-primary text-white py-2">
        <h5 class="modal-title" id="paymentModalLabel">Add Payment</h5>
        <button type="button" class="btn-close btn-close-white" data-bs-dismiss="modal" aria-label="Close"></button>
      </div>
      <div class="modal-body p-3 custom-modal-body" id="paymentModalBody" style="background-color: #f8f9fa;">
        <!-- Form will be loaded here via AJAX -->
      </div>
    </div>
  </div>
</div>

<!-- Receipt Modal -->
<div class="modal fade" id="receiptModal" tabindex="-1" aria-labelledby="receiptModalLabel" aria-hidden="true">
  <div class="modal-dialog modal-lg">
    <div class="modal-content">
      <div class="modal-header bg-primary text-white">
        <h5 class="modal-title" id="receiptModalLabel"><i class="bi bi-receipt"></i> Payment Receipt</h5>
        <button type="button" class="btn-close btn-close-white" data-bs-dismiss="modal" aria-label="Close"></button>
      </div>
      <div class="modal-body" id="receiptModalBody">
        <!-- Receipt partial loads here -->
      </div>
    </div>
  </div>
</div>

@section Scripts {
  <script>
    function openAddPaymentModal() {
      fetch('/Payments/PaymentForm')
        .then(response => {
          if (!response.ok) {
            throw new Error('Network response was not ok');
          }
          return response.text();
        })
        .then(html => {
          document.getElementById('paymentModalLabel').innerText = 'Add Payment';
          document.getElementById('paymentModalBody').innerHTML = html;
          var modal = new bootstrap.Modal(document.getElementById('paymentModal'));
          modal.show();
        })
        .catch(error => {
          console.error('Error loading payment form:', error);
          alert('Error loading payment form. Please try again.');
        });
    }

    function openEditPaymentModal(id) {
      fetch('/Payments/PaymentForm?id=' + id)
        .then(response => response.text())
        .then(html => {
          document.getElementById('paymentModalLabel').innerText = 'Edit Payment';
          document.getElementById('paymentModalBody').innerHTML = html;
          var modal = new bootstrap.Modal(document.getElementById('paymentModal'));
          modal.show();
        })
        .catch(error => {
          console.error('Error loading payment form:', error);
          alert('Error loading payment form. Please try again.');
        });
    }

    function deletePayment(id) {
      if (confirm('Delete this payment?')) {
        document.getElementById('deleteForm-' + id).submit();
      }
    }

    function showReceiptModal(paymentId) {
      fetch('/Payments/ReceiptPartial/' + paymentId)
        .then(response => response.text())
        .then(html => {
          document.getElementById('receiptModalBody').innerHTML = html;
          var modal = new bootstrap.Modal(document.getElementById('receiptModal'));
          modal.show();
        });
    }
  </script>
  <script src="~/js/receipt-utils.js"></script>
}