@model List<PropertyManagement.Web.ViewModels.TenantViewModel>

<div class="mb-4 p-3 rounded shadow-sm" style="background-color: #f4f6fb;">
  @{
    ViewData["SearchId"] = "balances-search";
    ViewData["SearchPlaceholder"] = "Search by tenant name or room...";
  }
  @await Html.PartialAsync("_TableSearch")

  <div class="table-responsive">
    <table class="table table-striped table-bordered align-middle mb-0"
           id="balancesTable"
           data-pagination
           data-items-per-page="8"
           data-search-input="#balances-search">
      <thead class="table-light">
        <tr>
          <th>Tenant</th>
          <th>Room</th>
          <th>Outstanding Balance</th>
          <th>Outstanding Months</th>
          <th>Actions</th>
        </tr>
      </thead>
      <tbody>
        @foreach (var tenant in Model)
        {
          var lease = tenant.LeaseAgreements?
          .OrderByDescending(l => l.StartDate)
          .FirstOrDefault(l => l.StartDate <= DateTime.Today && l.EndDate >= DateTime.Today);

          decimal expectedRent = lease?.RentAmount ?? 0m;

          var rentPayments = tenant.Payments?.Where(p => p.Type == "Rent").ToList() ?? new List<PropertyManagement.Web.ViewModels.PaymentViewModel>();

          var months = new List<(int Year, int Month)>();
          int currentYear = DateTime.Today.Year;
          int currentMonth = DateTime.Today.Month;
          for (int m = 1; m <= currentMonth; m++)
          {
            months.Add((currentYear, m));
          }

          int outstandingMonths = 0;
          decimal outstandingAmount = 0m;

          var paymentLookup = rentPayments
          .GroupBy(p => (p.PaymentYear, p.PaymentMonth))
          .ToDictionary(g => g.Key, g => g.OrderByDescending(p => p.Date).FirstOrDefault());

          if (expectedRent > 0)
          {
            foreach (var m in months)
            {
              var paid = rentPayments
              .Where(p => p.PaymentYear == m.Year && p.PaymentMonth == m.Month)
              .Sum(p => p.Amount);

              if (paid < expectedRent)
              {
                outstandingMonths++;
                outstandingAmount += (expectedRent - paid);
              }
            }
          }

          <tr>
            <td>@tenant.FullName</td>
            <td>@tenant.Room?.Number</td>
            <td>@(outstandingAmount > 0 ? outstandingAmount.ToString("C") : "-")</td>
            <td>@(outstandingMonths > 0 ? outstandingMonths.ToString() : "-")</td>
            <td>
              <div class="dropdown">
                <button class="btn btn-sm btn-outline-secondary dropdown-toggle" type="button" id="historyDropdown-@tenant.TenantId" data-bs-toggle="dropdown" aria-expanded="false">
                  Actions
                </button>
                <ul class="dropdown-menu" aria-labelledby="historyDropdown-@tenant.TenantId">
                  <li>
                    <a class="dropdown-item" href="#" data-bs-toggle="collapse" data-bs-target="#history-@tenant.TenantId" aria-expanded="false" aria-controls="history-@tenant.TenantId">
                      <i class="bi bi-clock-history"></i> View History
                    </a>
                  </li>
                </ul>
              </div>
            </td>
          </tr>
          <tr class="collapse" id="history-@tenant.TenantId">
            <td colspan="5">
              <strong>Payment History:</strong>
              <ul class="list-group list-group-flush">
                @{
                  foreach (var m in months)
                  {
                    var key = (m.Year, m.Month);
                    if (paymentLookup.ContainsKey(key))
                    {
                      var p = paymentLookup[key];
                      <li class="list-group-item">
                        @p.Date.ToShortDateString() - @p.Type - @p.Amount.ToString("C") (@System.Globalization.CultureInfo.CurrentCulture.DateTimeFormat.GetMonthName(p.PaymentMonth) @p.PaymentYear)
                      </li>
                    }
                    else
                    {
                      <li class="list-group-item text-danger fw-bold">
                        @System.Globalization.CultureInfo.CurrentCulture.DateTimeFormat.GetMonthName(m.Month) @m.Year - No payment recorded
                      </li>
                    }
                  }
                }
              </ul>
            </td>
          </tr>
        }
      </tbody>
    </table>
  </div>
</div>