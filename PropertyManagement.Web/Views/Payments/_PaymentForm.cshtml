@model PropertyManagement.Web.ViewModels.PaymentViewModel
@{
    var tenants = ViewBag.Tenants as List<PropertyManagement.Web.ViewModels.TenantViewModel>;
    var isEdit = Model.PaymentId.HasValue && Model.PaymentId > 0;
    var actionUrl = isEdit ? "/Payments/Edit" : "/Payments/Create";
}

<!-- Form Error Display -->
<div id="formErrors" class="alert alert-danger" style="display: none;"></div>
<div id="formSuccess" class="alert alert-success" style="display: none;"></div>

<form id="paymentForm" action="@actionUrl" method="post" enctype="multipart/form-data" class="needs-validation" novalidate>
    @Html.AntiForgeryToken()
    @if (isEdit)
    {
        <input type="hidden" asp-for="PaymentId" />
    }
    
    <div class="row g-4">
        <!-- Left Column -->
        <div class="col-lg-6">
            <!-- Tenant Selection -->
            <div class="mb-3">
                <label asp-for="TenantId" class="form-label fw-semibold">Tenant <span class="text-danger">*</span></label>
                <div class="input-group">
                    <span class="input-group-text">
                        <i class="bi bi-person-fill"></i>
                    </span>
                    <select name="TenantId" class="form-select" required @Html.Raw(isEdit ? "disabled" : "")>
                        <option value="">-- Select Tenant --</option>
                        @if (tenants != null)
                        {
                            @foreach (var tenant in tenants)
                            {
                                <option value="@tenant.TenantId" 
                                        data-room="@tenant.Room?.Number" 
                                        selected="@(Model.TenantId == tenant.TenantId)">
                                    @tenant.FullName (@tenant.Room?.Number)
                                </option>
                            }
                        }
                    </select>
                </div>
                @if (isEdit)
                {
                    <input type="hidden" asp-for="TenantId" />
                }
                <div class="invalid-feedback">Please select a tenant.</div>
                <small class="text-muted">Select the tenant making this payment</small>
            </div>

            <!-- Amount -->
            <div class="mb-3">
                <label asp-for="Amount" class="form-label fw-semibold">Amount (R) <span class="text-danger">*</span></label>
                <div class="input-group">
                    <span class="input-group-text">R</span>
                    <input asp-for="Amount" class="form-control" type="number" step="0.01" min="0" required placeholder="0.00" />
                </div>
                <div class="invalid-feedback">Please enter a valid payment amount.</div>
                <small class="text-muted">Enter the payment amount in South African Rands</small>
            </div>

            <!-- Payment Type -->
            <div class="mb-3">
                <label asp-for="Type" class="form-label fw-semibold">Payment Type <span class="text-danger">*</span></label>
                <div class="input-group">
                    <span class="input-group-text">
                        <i class="bi bi-tag-fill"></i>
                    </span>
                    <select asp-for="Type" class="form-select" required>
                        <option value="">-- Select Payment Type --</option>
                        <option value="Rent" selected="@(Model.Type == "Rent")">Monthly Rent</option>
                        <option value="Deposit" selected="@(Model.Type == "Deposit")">Security Deposit</option>
                        <option value="Utilities" selected="@(Model.Type == "Utilities")">Utilities</option>
                        <option value="Late Fee" selected="@(Model.Type == "Late Fee")">Late Fee</option>
                        <option value="Other" selected="@(Model.Type == "Other")">Other</option>
                    </select>
                </div>
                <div class="invalid-feedback">Please select a payment type.</div>
                <small class="text-muted">Specify what this payment is for</small>
            </div>

        </div>

        <!-- Right Column -->
        <div class="col-lg-6">
            <!-- Payment Period (Month & Year) -->
            <div class="row mb-3">
                <div class="col-md-6">
                    <label asp-for="PaymentMonth" class="form-label fw-semibold">Payment Month <span class="text-danger">*</span></label>
                    <div class="input-group">
                        <span class="input-group-text">
                            <i class="bi bi-calendar-month"></i>
                        </span>
                        <select asp-for="PaymentMonth" class="form-select" required>
                            <option value="">-- Select Month --</option>
                            @for (int month = 1; month <= 12; month++)
                            {
                                var monthName = System.Globalization.CultureInfo.CurrentCulture.DateTimeFormat.GetMonthName(month);
                                <option value="@month" selected="@(Model.PaymentMonth == month)">@monthName</option>
                            }
                        </select>
                    </div>
                    <div class="invalid-feedback">Please select a payment month.</div>
                </div>
                <div class="col-md-6">
                    <label asp-for="PaymentYear" class="form-label fw-semibold">Payment Year <span class="text-danger">*</span></label>
                    <div class="input-group">
                        <span class="input-group-text">
                            <i class="bi bi-calendar-year"></i>
                        </span>
                        <select asp-for="PaymentYear" class="form-select" required>
                            <option value="">-- Select Year --</option>
                            @{
                                int currentYear = DateTime.Now.Year;
                                for (int year = currentYear - 1; year <= currentYear + 1; year++)
                                {
                                    <option value="@year" selected="@(Model.PaymentYear == year)">@year</option>
                                }
                            }
                        </select>
                    </div>
                    <div class="invalid-feedback">Please select a payment year.</div>
                </div>
            </div>

            <!-- Payment Date -->
            <div class="mb-3">
                <label asp-for="Date" class="form-label fw-semibold">Payment Date <span class="text-danger">*</span></label>
                <div class="input-group">
                    <span class="input-group-text">
                        <i class="bi bi-calendar-event"></i>
                    </span>
                    @if (isEdit)
                    {
                        <input asp-for="Date" class="form-control" type="date" required />
                    }
                    else
                    {
                        <input asp-for="Date" class="form-control" type="date" value="@DateTime.Now.ToString("yyyy-MM-dd")" readonly />
                    }
                </div>
                @if (!isEdit)
                {
                    <small class="text-muted">Payment date is automatically set to today for new payments</small>
                }
            </div>

            <!-- Receipt Upload -->
            <div class="mb-3">
                <label for="receiptFile" class="form-label fw-semibold">Payment Receipt (Optional)</label>
                <div class="input-group">
                    <span class="input-group-text">
                        <i class="bi bi-receipt"></i>
                    </span>
                    <input type="file" id="receiptFile" name="receiptFile" class="form-control" accept=".pdf,.jpg,.jpeg,.png" />
                </div>
                <small class="text-muted">Upload a receipt or proof of payment (PDF, JPG, PNG - Max 5MB)</small>
                @if (!string.IsNullOrEmpty(Model.ReceiptPath))
                {
                    <div class="mt-2">
                        <div class="d-flex align-items-center gap-2">
                            <i class="bi bi-file-earmark-pdf text-success"></i>
                            <a href="@Model.ReceiptPath" target="_blank" class="text-decoration-none">
                                Current Receipt
                            </a>
                        </div>
                    </div>
                }
            </div>
        </div>
    </div>

</form>

<div class="row mt-4">
    <div class="col-12">
        <div class="d-flex justify-content-end gap-2">
            <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">
                <i class="bi bi-x-circle"></i> Cancel
            </button>
            <button type="submit" class="btn btn-primary" form="paymentForm" id="submitBtn">
                <i class="bi bi-@(isEdit ? "check" : "plus")-circle"></i>
                <span class="submit-text">@(isEdit ? "Update Payment" : "Add Payment")</span>
                <div class="spinner-border spinner-border-sm ms-2" style="display: none;" role="status" aria-hidden="true"></div>
            </button>
        </div>
    </div>
</div>

<script type="text/javascript">
  document.addEventListener('DOMContentLoaded', function() {
    if (document.getElementById('paymentForm') && typeof initializePaymentForm === 'function') {
      initializePaymentForm();
    }
  });
  
  setTimeout(function() {
    if (document.getElementById('paymentForm') && typeof initializePaymentForm === 'function') {
      initializePaymentForm();
    }
  }, 100);
</script>