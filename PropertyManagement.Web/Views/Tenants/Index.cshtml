@model IEnumerable<PropertyManagement.Web.ViewModels.TenantViewModel>
@{
  ViewData["Title"] = "Tenants";
  var rooms = ViewBag.Rooms as List<PropertyManagement.Web.ViewModels.RoomViewModel>;
}

<!-- Page Header -->
<div class="page-header mb-4">
  <div class="d-flex justify-content-between align-items-center">
    <div class="page-title">
      <h1 class="page-title-main">
        <div class="page-icon">
          <i class="bi bi-people"></i>
        </div>
        Tenants
      </h1>
      <p class="page-title-sub text-secondary mb-0">Manage tenant information, contacts, and room assignments</p>
    </div>
    <div class="page-actions">
      <div class="page-info text-end me-3">
        <div class="text-secondary small">Total Tenants</div>
        <div class="fw-semibold">@Model.Count()</div>
      </div>
      <button class="btn btn-primary page-action-btn primary" onclick="openAddModal()">
        <i class="bi bi-plus-circle"></i>
        Add Tenant
      </button>
    </div>
  </div>
</div>

<!-- Tenants Table Container -->
<div class="table-container">
  <div class="table-header">
    <h5 class="table-title">Tenant Directory</h5>
    <p class="table-description">Complete list of all tenants with contact information and room assignments</p>
  </div>
  <div class="table-responsive">
    <table class="table align-middle mb-0" id="tenantsTable" 
           data-datatable
           data-page-length="15"
           data-search-label="Search tenants:"
           data-empty-message="No tenants found">
      <thead>
        <tr>
          <th>Tenant</th>
          <th>Contact Information</th>
          <th>Emergency Contact</th>
          <th>Room Assignment</th>
          <th class="text-center">Actions</th>
        </tr>
      </thead>
      <tbody>
        @if (Model.Any())
        {
          @foreach (var tenant in Model)
          {
            <tr>
              <td>
                <div class="d-flex align-items-center">
                  <div class="tenant-avatar me-3">
                    <i class="bi bi-person-circle text-primary"></i>
                  </div>
                  <div>
                    <div class="fw-semibold text-primary">@tenant.FullName</div>
                    <div class="text-muted small">Tenant ID: @tenant.TenantId</div>
                  </div>
                </div>
              </td>
              <td>
                <div class="contact-info">
                  <div class="mb-1">
                    <i class="bi bi-telephone text-success me-2"></i>
                    <span>@tenant.Contact</span>
                  </div>
                  @if (!string.IsNullOrEmpty(tenant.User?.Username))
                  {
                    <div class="text-muted small">
                      <i class="bi bi-person-badge me-2"></i>
                      <span>@tenant.User.Username</span>
                    </div>
                  }
                </div>
              </td>
              <td>
                <div class="emergency-contact">
                  @if (!string.IsNullOrEmpty(tenant.EmergencyContactName))
                  {
                    <div class="fw-medium">@tenant.EmergencyContactName</div>
                    <div class="text-muted small">
                      <i class="bi bi-telephone me-1"></i>
                      @tenant.EmergencyContactNumber
                    </div>
                  }
                  else
                  {
                    <span class="text-muted">Not provided</span>
                  }
                </div>
              </td>
              <td>
                @if (tenant.Room != null)
                {
                  <span class="badge bg-primary-subtle text-primary-emphasis px-3 py-2">
                    <i class="bi bi-door-closed me-1"></i>
                    Room @tenant.Room.Number
                  </span>
                }
                else
                {
                  <span class="badge bg-warning-subtle text-warning-emphasis px-3 py-2">
                    <i class="bi bi-exclamation-circle me-1"></i>
                    No Room
                  </span>
                }
              </td>
              <td class="text-center">
                <div class="btn-group" role="group">
                  <button type="button" 
                          class="btn btn-sm btn-outline-primary" 
                          onclick="openEditModal(@tenant.TenantId)"
                          title="Edit Tenant">
                    <i class="bi bi-pencil"></i>
                  </button>
                  <button type="button" 
                          class="btn btn-sm btn-outline-warning" 
                          onclick="openChangePasswordModal(@tenant.TenantId)"
                          title="Change Password">
                    <i class="bi bi-key"></i>
                  </button>
                  <button type="button" 
                          class="btn btn-sm btn-outline-danger" 
                          data-bs-toggle="modal" 
                          data-bs-target="#deleteModal-@tenant.TenantId"
                          title="Delete Tenant">
                    <i class="bi bi-trash"></i>
                  </button>
                </div>
                <form id="deleteForm-@tenant.TenantId" asp-action="Delete" method="post" style="display:none;">
                  <input type="hidden" name="id" value="@tenant.TenantId" />
                </form>
              </td>
            </tr>
          @await Html.PartialAsync(
              "_DeleteModal",
              new DeleteModalViewModel {
                  ModalId = $"deleteModal-{tenant.TenantId}",
                  ModalLabelId = $"deleteModalLabel-{tenant.TenantId}",
                  Title = "Delete Tenant",
                  Body = $"Are you sure you want to delete <strong>{tenant.FullName}</strong>?",
                  Action = "Delete",
                  Controller = "Tenants",
                  EntityId = tenant.TenantId
              }
          )
          }
        }
        else
        {
          <tr>
            <td colspan="5">
              <div class="empty-state">
                <i class="bi bi-people empty-state-icon"></i>
                <h3 class="empty-state-title">No Tenants Found</h3>
                <p class="empty-state-description">
                  Start building your tenant directory by adding your first tenant. 
                  You can add tenant information, contact details, and room assignments.
                </p>
                <button class="empty-state-action" onclick="openAddModal()">
                  <i class="bi bi-plus-circle"></i>
                  Add First Tenant
                </button>
              </div>
            </td>
          </tr>
        }
      </tbody>
    </table>
  </div>
</div>

<!-- Tenant Modal Container -->
<div class="modal fade" id="tenantModal" tabindex="-1" aria-labelledby="tenantModalLabel" aria-hidden="true">
  <div class="modal-dialog modal-dialog-centered modal-lg">
    <div class="modal-content">
      <div class="modal-header">
        <h1 class="modal-title">
          <i class="bi bi-person-plus"></i>
          <span id="tenantModalLabel">Add Tenant</span>
        </h1>
        <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
      </div>
      <div class="modal-body" id="tenantModalBody">
        <div class="loading-container">
          <div class="loading-spinner"></div>
          <div class="loading-text">Loading form...</div>
        </div>
      </div>
    </div>
  </div>
</div>

<!-- Change Password Modal Container -->
<div class="modal fade" id="changePasswordModal" tabindex="-1" aria-labelledby="changePasswordModalLabel" aria-hidden="true">
  <div class="modal-dialog modal-dialog-centered">
    <div class="modal-content">
      <div class="modal-header bg-warning text-dark">
        <h1 class="modal-title text-dark">
          <i class="bi bi-key"></i>
          <span id="changePasswordModalLabel">Change Password</span>
        </h1>
        <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
      </div>
      <div class="modal-body" id="changePasswordModalBody">
        <div class="loading-container">
          <div class="loading-spinner"></div>
          <div class="loading-text">Loading form...</div>
        </div>
      </div>
    </div>
  </div>
</div>

@section Scripts {
  <script>
    function getAntiForgeryToken() {
        return $('input[name="__RequestVerificationToken"]').val();
    }

    function openAddModal() {
        fetch('/Tenants/TenantForm', {
            method: 'GET',
            headers: {
                'RequestVerificationToken': getAntiForgeryToken()
            }
        })
            .then(response => response.text())
            .then(html => {
                document.getElementById('tenantModalLabel').innerText = 'Add Tenant';
                document.getElementById('tenantModalBody').innerHTML = html;
                var modal = new bootstrap.Modal(document.getElementById('tenantModal'));
                modal.show();
            })
            .catch(error => {
                console.error('Error loading form:', error);
            });
    }
    
    function openEditModal(id) {
        fetch('/Tenants/TenantForm?id=' + id, {
            method: 'GET',
            headers: {
                'RequestVerificationToken': getAntiForgeryToken()
            }
        })
            .then(response => response.text())
            .then(html => {
                document.getElementById('tenantModalLabel').innerText = 'Edit Tenant';
                document.getElementById('tenantModalBody').innerHTML = html;
                var modal = new bootstrap.Modal(document.getElementById('tenantModal'));
                modal.show();
            })
            .catch(error => {
                console.error('Error loading form:', error);
            });
    }

    function openChangePasswordModal(id) {
        fetch('/Tenants/ChangePassword/' + id, {
            method: 'GET',
            headers: {
                'RequestVerificationToken': getAntiForgeryToken()
            }
        })
            .then(response => response.text())
            .then(html => {
                document.getElementById('changePasswordModalLabel').innerText = 'Change Password';
                document.getElementById('changePasswordModalBody').innerHTML = html;
                var modal = new bootstrap.Modal(document.getElementById('changePasswordModal'));
                modal.show();
            })
            .catch(error => {
                console.error('Error loading password change form:', error);
            });
    }

    function deleteTenant(id) {
        if (confirm('Are you sure you want to delete this tenant? This action cannot be undone.')) {
            document.getElementById('deleteForm-' + id).submit();
        }
    }
  </script>
}