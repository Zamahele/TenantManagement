@model PropertyManagement.Domain.Entities.Tenant

@{
  ViewData["Title"] = "My Profile";
  var now = DateTime.Now;
  var startOfYear = new DateTime(now.Year, 1, 1);
  var months = Enumerable.Range(1, now.Month)
      .Select(m => new DateTime(now.Year, m, 1))
      .ToList();

  // Group payments by year and month for quick lookup
  var paymentLookup = Model.Payments?
      .Where(p => p.Date.Year == now.Year)
      .GroupBy(p => p.Date.Month)
      .ToDictionary(g => g.Key, g => g.OrderByDescending(p => p.Date).FirstOrDefault())
      ?? new Dictionary<int, PropertyManagement.Domain.Entities.Payment>();
}

<!-- Card wrapping only the heading -->
<div class="card mb-4">
  <div class="card-header bg-primary text-white">
    <h2 class="mb-0"><i class="bi bi-person-circle"></i> My Profile</h2>
  </div>
</div>

<ul class="nav nav-tabs mb-3" id="profileTab" role="tablist">
  <li class="nav-item" role="presentation">
    <button class="nav-link active" id="profile-tab" data-bs-toggle="tab" data-bs-target="#profile" type="button" role="tab" aria-controls="profile" aria-selected="true">
      Profile
    </button>
  </li>
  <li class="nav-item" role="presentation">
    <button class="nav-link" id="history-tab" data-bs-toggle="tab" data-bs-target="#history" type="button" role="tab" aria-controls="history" aria-selected="false">
      Rental History
    </button>
  </li>
</ul>
<div class="tab-content" id="profileTabContent">
  <div class="tab-pane fade show active" id="profile" role="tabpanel" aria-labelledby="profile-tab">
    <div class="mb-3 d-flex justify-content-end">
      <button class="btn btn-outline-primary btn-sm" onclick="showEditProfileModal(); return false;">
        <i class="bi bi-pencil"></i> Edit
      </button>
    </div>
    <dl class="row mb-0">
      <dt class="col-sm-3">Username</dt>
      <dd class="col-sm-9">@Model.User.Username</dd>

      <dt class="col-sm-3">Full Name</dt>
      <dd class="col-sm-9">@Model.FullName</dd>

      <dt class="col-sm-3">Contact</dt>
      <dd class="col-sm-9">@Model.Contact</dd>

      <dt class="col-sm-3">Room</dt>
      <dd class="col-sm-9">@Model.Room?.Number</dd>

      <dt class="col-sm-3">EM Contact Name</dt>
      <dd class="col-sm-9">@Model.EmergencyContactName</dd>

      <dt class="col-sm-3">EM Contact#</dt>
      <dd class="col-sm-9">@Model.EmergencyContactNumber</dd>
    </dl>
  </div>
  <div class="tab-pane fade" id="history" role="tabpanel" aria-labelledby="history-tab">
    <table class="table table-striped mb-0 align-middle mt-3">
      <thead class="table-light">
        <tr>
          <th>Month</th>
          <th>FullName</th>
          <th>Room #</th>
          <th>Date</th>
          <th>Rent (R)</th>
        </tr>
      </thead>
      <tbody>
        @foreach (var month in months)
        {
          var payment = paymentLookup.ContainsKey(month.Month) ? paymentLookup[month.Month] : null;
          if (payment != null)
          {
            <tr>
              <td>@month.ToString("MMMM")</td>
              <td>@payment.Tenant?.FullName</td>
              <td>@payment.Tenant?.Room?.Number</td>
              <td>@payment.Date.ToShortDateString()</td>
              <td>@payment.Amount.ToString("C", System.Globalization.CultureInfo.GetCultureInfo("en-ZA"))</td>
            </tr>
          }
          else
          {
            <tr class="table-danger">
              <td>@month.ToString("MMMM")</td>
              <td colspan="4" class="text-danger fw-bold">No payment recorded</td>
            </tr>
          }
        }
      </tbody>
    </table>
  </div>
</div>

<div id="editProfileModalContainer"></div>

@if (TempData["ErrorMessage"] != null)
{
  <div class="alert alert-danger alert-dismissible fade show mt-3" role="alert">
    <i class="bi bi-exclamation-triangle-fill"></i>
    @TempData["ErrorMessage"]
    <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>
  </div>
}

@section Scripts {
  <partial name="_ValidationScriptsPartial" />
  <script>
    function showEditProfileModal() {
        fetch('@Url.Action("EditProfile", "Tenants")')
            .then(response => response.text())
            .then(html => {
                document.getElementById('editProfileModalContainer').innerHTML = html;
                var modal = new bootstrap.Modal(document.getElementById('editProfileModal'));
                modal.show();
            });
    }

    // Auto-dismiss alert after 4 seconds
    document.addEventListener('DOMContentLoaded', function () {
      var alert = document.querySelector('.alert-dismissible');
      if (alert) {
        setTimeout(function () {
          var bsAlert = bootstrap.Alert.getOrCreateInstance(alert);
          bsAlert.close();
        }, 4000);
      }
    });
  </script>
}