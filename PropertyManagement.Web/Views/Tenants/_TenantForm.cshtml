@model PropertyManagement.Web.ViewModels.TenantViewModel
@{
  var rooms = ViewBag.Rooms as List<PropertyManagement.Web.ViewModels.RoomViewModel>;
  bool isEdit = Model?.TenantId > 0;
}
<form id="tenantForm" asp-action="CreateOrEdit" method="post" autocomplete="off">
  <input asp-for="TenantId" type="hidden" />

  <div class="mb-3">
    <label asp-for="RoomId" class="form-label"></label>
    <select asp-for="RoomId" class="form-select" asp-items="@(new SelectList(rooms, "RoomId", "Number", Model?.RoomId))" required>
      <option value="">-- Select Room --</option>
    </select>
  </div>

  <div class="mb-3">
    <label class="form-label">Contact</label>
    <input type="text"
           class="form-control"
           name="Contact"
           id="Contact"
           value="@Model?.Contact"
           required
           oninput="document.getElementById('username').value = this.value;" />
  </div>

  <div class="mb-3">
    <label class="form-label">Username</label>
    <input type="text"
           class="form-control"
           name="username"
           id="username"
           value="@Model?.Contact"
           readonly
           required />
  </div>

  <div class="mb-3">
    <label class="form-label">Password</label>
    <input type="password"
           class="form-control"
           name="plainTextPassword"
           id="plainTextPassword"
           placeholder="@(isEdit ? "Leave blank to keep current password" : "Enter password (minimum 8 characters)")"
           required="@(!isEdit)" />
    <small class="text-muted">@(isEdit ? "Leave blank to keep current password" : "Password must be at least 8 characters long")</small>
  </div>

  <div class="mb-3">
    <label asp-for="FullName" class="form-label"></label>
    <input asp-for="FullName" class="form-control" required />
  </div>

  <div class="mb-3">
    <label asp-for="EmergencyContactName" class="form-label"></label>
    <input asp-for="EmergencyContactName" class="form-control" required />
  </div>

  <div class="mb-3">
    <label asp-for="EmergencyContactNumber" class="form-label"></label>
    <input asp-for="EmergencyContactNumber" class="form-control" required />
  </div>

  <div class="d-grid mt-3">
    <button type="submit" class="btn btn-primary">
      <i class="bi bi-person-plus"></i> Save
    </button>
  </div>
</form>

@section Scripts {
  <script>
    // Ensure username is always in sync with contact on page load (for edit)
    document.addEventListener('DOMContentLoaded', function () {
      var contact = document.getElementById('Contact');
      var username = document.getElementById('username');
      if (contact && username) {
        username.value = contact.value;
        contact.addEventListener('input', function () {
          username.value = contact.value;
        });
      }
      
      // Password validation
      var pwd = document.getElementById('plainTextPassword');
      var isEdit = @(isEdit.ToString().ToLower());
      
      if (pwd) {
        pwd.addEventListener('input', function() {
          var value = this.value;
          
          // For edit mode, allow empty password (keeps current password)
          if (isEdit && value === '') {
            this.setCustomValidity('');
            return;
          }
          
          // For create mode or when password is provided in edit mode, validate length
          if (value.length > 0 && value.length < 8) {
            this.setCustomValidity('Password must be at least 8 characters');
          } else {
            this.setCustomValidity('');
          }
        });
      }
    });
  </script>
}