@model PropertyManagement.Web.ViewModels.WaitingListManagementViewModel
@{
    ViewData["Title"] = "Waiting List";
}

<!-- Page Header -->
<div class="page-header mb-4">
    <div class="d-flex justify-content-between align-items-center">
        <div class="page-title">
            <h1 class="page-title-main">
                <div class="page-icon">
                    <i class="bi bi-hourglass-split"></i>
                </div>
                Waiting List
            </h1>
            <p class="page-title-sub text-secondary mb-0">Manage prospective tenants and notifications for room availability</p>
        </div>
        <div class="page-actions">
            <div class="page-info text-end me-3">
                <div class="text-secondary small">Active Entries</div>
                <div class="fw-semibold">@Model.Summary.ActiveEntries</div>
            </div>
            <button class="btn btn-outline-primary page-action-btn me-2" onclick="openQuickAddModal()">
                <i class="bi bi-telephone"></i>
                Quick Add
            </button>
            <button class="btn btn-primary page-action-btn primary" onclick="openAddWaitingListModal()">
                <i class="bi bi-plus-circle"></i>
                Add Entry
            </button>
        </div>
    </div>
</div>

<!-- Summary Cards -->
<div class="row mb-4">
    <div class="col-md-3 mb-3">
        <div class="card summary-card">
            <div class="card-body">
                <div class="d-flex align-items-center">
                    <div class="summary-icon bg-primary">
                        <i class="bi bi-people"></i>
                    </div>
                    <div class="ms-3">
                        <h6 class="summary-title">Total Entries</h6>
                        <h4 class="summary-value">@Model.Summary.TotalEntries</h4>
                    </div>
                </div>
            </div>
        </div>
    </div>
    <div class="col-md-3 mb-3">
        <div class="card summary-card">
            <div class="card-body">
                <div class="d-flex align-items-center">
                    <div class="summary-icon bg-success">
                        <i class="bi bi-check-circle"></i>
                    </div>
                    <div class="ms-3">
                        <h6 class="summary-title">Active Entries</h6>
                        <h4 class="summary-value">@Model.Summary.ActiveEntries</h4>
                    </div>
                </div>
            </div>
        </div>
    </div>
    <div class="col-md-3 mb-3">
        <div class="card summary-card">
            <div class="card-body">
                <div class="d-flex align-items-center">
                    <div class="summary-icon bg-info">
                        <i class="bi bi-bell"></i>
                    </div>
                    <div class="ms-3">
                        <h6 class="summary-title">Notified This Week</h6>
                        <h4 class="summary-value">@Model.Summary.NotifiedThisWeek</h4>
                    </div>
                </div>
            </div>
        </div>
    </div>
    <div class="col-md-3 mb-3">
        <div class="card summary-card">
            <div class="card-body">
                <div class="d-flex align-items-center">
                    <div class="summary-icon bg-warning">
                        <i class="bi bi-arrow-up-right"></i>
                    </div>
                    <div class="ms-3">
                        <h6 class="summary-title">Conversion Rate</h6>
                        <h4 class="summary-value">@Model.Summary.ConversionRateFormatted</h4>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

<!-- Search and Filter Section -->
<div class="card mb-4">
    <div class="card-body">
        <div class="row align-items-end">
            <div class="col-md-3 mb-3">
                <label class="form-label">Status Filter</label>
                <select class="form-select" id="statusFilter" onchange="applyFilters()">
                    @foreach (var status in Model.StatusOptions)
                    {
                        <option value="@status" selected="@(status == Model.StatusFilter)">@status</option>
                    }
                </select>
            </div>
            <div class="col-md-3 mb-3">
                <label class="form-label">Room Type Filter</label>
                <select class="form-select" id="roomTypeFilter" onchange="applyFilters()">
                    @foreach (var roomType in Model.RoomTypeOptions)
                    {
                        <option value="@roomType" selected="@(roomType == Model.RoomTypeFilter)">@roomType</option>
                    }
                </select>
            </div>
            <div class="col-md-3 mb-3">
                <label class="form-label">Search</label>
                <div class="input-group">
                    <input type="text" class="form-control" id="searchInput" placeholder="Search name, phone, email..." value="@Model.SearchTerm" onkeypress="handleSearchKeyPress(event)">
                    <button class="btn btn-outline-secondary" type="button" onclick="applyFilters()">
                        <i class="bi bi-search"></i>
                    </button>
                </div>
            </div>
            <div class="col-md-3 mb-3">
                <div class="d-flex gap-2">
                    <button class="btn btn-outline-secondary" onclick="clearFilters()">
                        <i class="bi bi-x-circle"></i> Clear
                    </button>
                    <button class="btn btn-outline-primary" onclick="exportWaitingList()">
                        <i class="bi bi-download"></i> Export
                    </button>
                </div>
            </div>
        </div>
    </div>
</div>

<!-- Waiting List Table -->
<div class="table-container">
    <div class="table-header">
        <h5 class="table-title">Waiting List Entries</h5>
        <p class="table-description">All prospective tenants waiting for room availability</p>
    </div>
    <div class="table-responsive">
        <table class="table align-middle mb-0" id="waitingListTable" 
               data-datatable
               data-page-length="15"
               data-search-label="Search waiting list:"
               data-empty-message="No waiting list entries found">
            <thead>
                <tr>
                    <th>
                        <input type="checkbox" class="form-check-input" id="selectAll" onchange="toggleSelectAll()">
                    </th>
                    <th>Contact</th>
                    <th>Preferences</th>
                    <th>Registration</th>
                    <th>Notifications</th>
                    <th>Status</th>
                    <th class="text-center">Actions</th>
                </tr>
            </thead>
            <tbody>
                @if (Model.Entries.Any())
                {
                    @foreach (var entry in Model.Entries)
                    {
                        <tr>
                            <td>
                                <input type="checkbox" class="form-check-input entry-checkbox" value="@entry.WaitingListId">
                            </td>
                            <td>
                                <div class="d-flex align-items-center">
                                    <div class="contact-icon me-3">
                                        <i class="bi bi-person-circle fs-4 text-primary"></i>
                                    </div>
                                    <div>
                                        <div class="fw-medium">@(entry.FullName ?? "Unknown")</div>
                                        <div class="text-muted small">
                                            <i class="bi bi-telephone me-1"></i>@entry.PhoneNumber
                                        </div>
                                        @if (!string.IsNullOrEmpty(entry.Email))
                                        {
                                            <div class="text-muted small">
                                                <i class="bi bi-envelope me-1"></i>@entry.Email
                                            </div>
                                        }
                                    </div>
                                </div>
                            </td>
                            <td>
                                <div class="preferences-info">
                                    <div class="small">
                                        <strong>Room:</strong> @entry.RoomTypeDisplay
                                    </div>
                                    <div class="small">
                                        <strong>Budget:</strong> @entry.BudgetFormatted
                                    </div>
                                    @if (!string.IsNullOrEmpty(entry.Source))
                                    {
                                        <div class="small">
                                            <strong>Source:</strong> @entry.Source
                                        </div>
                                    }
                                </div>
                            </td>
                            <td>
                                <div class="registration-info">
                                    <div class="small">
                                        <strong>Registered:</strong><br>@entry.RegisteredDateFormatted
                                    </div>
                                    @if (entry.LastNotified.HasValue)
                                    {
                                        <div class="small text-muted">
                                            <strong>Last Notified:</strong><br>@entry.LastNotifiedFormatted
                                        </div>
                                    }
                                </div>
                            </td>
                            <td class="text-center">
                                <div class="notification-stats">
                                    <span class="badge bg-secondary">
                                        @entry.NotificationCount sent
                                    </span>
                                </div>
                            </td>
                            <td>
                                <span class="badge @entry.StatusBadgeClass">@entry.Status</span>
                            </td>
                            <td class="text-center">
                                <div class="btn-group" role="group">
                                    <button type="button" class="btn btn-sm btn-outline-info" 
                                            onclick="viewDetails(@entry.WaitingListId)" 
                                            title="View Details">
                                        <i class="bi bi-eye"></i>
                                    </button>
                                    <button type="button" class="btn btn-sm btn-outline-primary" 
                                            onclick="openEditWaitingListModal(@entry.WaitingListId)" 
                                            title="Edit Entry">
                                        <i class="bi bi-pencil-square"></i>
                                    </button>
                                    <button type="button" class="btn btn-sm btn-outline-success" 
                                            onclick="openNotificationModal(@entry.WaitingListId)" 
                                            title="Send Notification">
                                        <i class="bi bi-bell"></i>
                                    </button>
                                    <button type="button" class="btn btn-sm btn-outline-danger" 
                                            onclick="openWaitingListDeleteModal(@entry.WaitingListId, '@entry.ContactDisplay', 'Entry registered @entry.RegisteredDateFormatted')" 
                                            title="Delete Entry">
                                        <i class="bi bi-trash"></i>
                                    </button>
                                </div>
                            </td>
                        </tr>
                    }
                }
                else
                {
                    <tr>
                        <td colspan="7" class="text-center text-muted py-4">
                            <i class="bi bi-hourglass-split fs-1 mb-3 d-block"></i>
                            <h5>No waiting list entries found</h5>
                            <p>Start by adding prospective tenants to the waiting list.</p>
                            <button class="btn btn-primary" onclick="openAddWaitingListModal()">
                                <i class="bi bi-plus-circle"></i> Add First Entry
                            </button>
                        </td>
                    </tr>
                }
            </tbody>
        </table>
    </div>
</div>

<!-- Bulk Actions Panel -->
@if (Model.Entries.Any())
{
    <div class="card mt-4" id="bulkActionsPanel" style="display: none;">
        <div class="card-body">
            <div class="row align-items-end">
                <div class="col-md-4">
                    <label class="form-label">Bulk Action</label>
                    <select class="form-select" id="bulkActionSelect">
                        <option value="">Select an action...</option>
                        <option value="notify">Send Notification</option>
                        <option value="status">Update Status</option>
                        <option value="export">Export Selected</option>
                        <option value="delete">Delete Selected</option>
                    </select>
                </div>
                <div class="col-md-6">
                    <label class="form-label">Message (for notifications)</label>
                    <textarea class="form-control" id="bulkMessage" rows="2" placeholder="Enter notification message..."></textarea>
                </div>
                <div class="col-md-2">
                    <button class="btn btn-primary w-100" onclick="executeBulkAction()">
                        <i class="bi bi-lightning"></i> Execute
                    </button>
                </div>
            </div>
        </div>
    </div>
}

<!-- Modals Container -->
<div id="waitingListModal" class="modal fade" tabindex="-1" aria-hidden="true">
    <div class="modal-dialog modal-lg">
        <div class="modal-content">
            <!-- Content will be loaded via AJAX -->
        </div>
    </div>
</div>

<div id="quickAddModal" class="modal fade" tabindex="-1" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content">
            <!-- Content will be loaded via AJAX -->
        </div>
    </div>
</div>

<div id="notificationModal" class="modal fade" tabindex="-1" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content">
            <!-- Content will be loaded via AJAX -->
        </div>
    </div>
</div>

<!-- Delete Modal -->
<div class="modal fade" id="deleteModal" tabindex="-1" aria-labelledby="deleteModalTitle" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="deleteModalTitle">Delete Waiting List Entry</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body">
                <p id="deleteModalBody">Are you sure you want to delete this waiting list entry?</p>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cancel</button>
                <form id="deleteForm" method="post" style="display: inline;">
                    @Html.AntiForgeryToken()
                    <button type="submit" class="btn btn-danger">Delete</button>
                </form>
            </div>
        </div>
    </div>
</div>

@section Scripts {
<script>
    // Global variables
    let selectedEntries = [];

    // Initialize page
    $(document).ready(function() {
        initializeDataTable();
        setupEventHandlers();
    });

    function initializeDataTable() {
        // Check if table has data rows before initializing DataTable
        var tableRows = $('#waitingListTable tbody tr').length;
        if (tableRows === 0 || $('#waitingListTable tbody tr td[colspan]').length > 0) {
            // Don't initialize DataTable if there are no data rows or only empty state
            return;
        }

        if ($.fn.DataTable.isDataTable('#waitingListTable')) {
            $('#waitingListTable').DataTable().destroy();
        }
        
        $('#waitingListTable').DataTable({
            pageLength: 15,
            responsive: true,
            columnDefs: [
                { orderable: false, targets: [0, 6] } // Disable sorting on checkbox and actions columns
            ],
            language: {
                search: "Search waiting list:",
                emptyTable: "No waiting list entries found"
            }
        });
    }

    function setupEventHandlers() {
        // Handle checkbox changes
        $(document).on('change', '.entry-checkbox', function() {
            updateSelectedEntries();
        });
    }

    // Modal functions
    function openAddWaitingListModal() {
        loadWaitingListForm('Add Waiting List Entry', '/WaitingList/WaitingListForm');
    }

    function openEditWaitingListModal(id) {
        loadWaitingListForm('Edit Waiting List Entry', `/WaitingList/WaitingListForm/${id}`);
    }

    function openQuickAddModal() {
        loadQuickAddForm('Quick Add to Waiting List', '/WaitingList/QuickAdd');
    }

    function loadWaitingListForm(title, url) {
        $('#waitingListModal .modal-content').html('<div class="modal-body text-center"><div class="spinner-border" role="status"></div></div>');
        $('#waitingListModal').modal('show');

        $.get(url)
            .done(function(data) {
                $('#waitingListModal .modal-content').html(`
                    <div class="modal-header">
                        <h5 class="modal-title">${title}</h5>
                        <button type="button" class="btn-close" data-bs-dismiss="modal"></button>
                    </div>
                    <div class="modal-body">
                        ${data}
                    </div>
                `);
            })
            .fail(function() {
                $('#waitingListModal .modal-content').html(`
                    <div class="modal-header">
                        <h5 class="modal-title">Error</h5>
                        <button type="button" class="btn-close" data-bs-dismiss="modal"></button>
                    </div>
                    <div class="modal-body">
                        <div class="alert alert-danger">Failed to load form. Please try again.</div>
                    </div>
                `);
            });
    }

    function loadQuickAddForm(title, url) {
        $('#quickAddModal .modal-content').html('<div class="modal-body text-center"><div class="spinner-border" role="status"></div></div>');
        $('#quickAddModal').modal('show');

        $.get(url)
            .done(function(data) {
                $('#quickAddModal .modal-content').html(`
                    <div class="modal-header">
                        <h5 class="modal-title">${title}</h5>
                        <button type="button" class="btn-close" data-bs-dismiss="modal"></button>
                    </div>
                    <div class="modal-body">
                        ${data}
                    </div>
                `);
            })
            .fail(function() {
                $('#quickAddModal .modal-content').html(`
                    <div class="modal-header">
                        <h5 class="modal-title">Error</h5>
                        <button type="button" class="btn-close" data-bs-dismiss="modal"></button>
                    </div>
                    <div class="modal-body">
                        <div class="alert alert-danger">Failed to load form. Please try again.</div>
                    </div>
                `);
            });
    }

    // View details
    function viewDetails(id) {
        window.location.href = `/WaitingList/Details/${id}`;
    }

    // Delete modal
    function openWaitingListDeleteModal(id, contactInfo, details) {
        openDeleteModal(id, contactInfo, details, '/WaitingList/Delete', 'Waiting List Entry');
    }
    
    function openDeleteModal(entityId, contactInfo, details, actionUrl, title) {
        var modal = document.getElementById('deleteModal');
        var modalTitle = document.getElementById('deleteModalTitle');
        var modalBody = document.getElementById('deleteModalBody');
        var deleteForm = document.getElementById('deleteForm');
        
        modalTitle.textContent = `Delete ${title}`;
        modalBody.innerHTML = `
            <div class="alert alert-warning">
                <i class="bi bi-exclamation-triangle me-2"></i>
                <strong>Warning:</strong> This action cannot be undone.
            </div>
            <p><strong>Contact:</strong> ${contactInfo}</p>
            <p><strong>Details:</strong> ${details}</p>
            <p>Are you sure you want to delete this waiting list entry?</p>
        `;
        
        deleteForm.action = actionUrl;
        deleteForm.innerHTML = `
            <input name="__RequestVerificationToken" type="hidden" value="${document.querySelector('input[name="__RequestVerificationToken"]').value}" />
            <input type="hidden" name="id" value="${entityId}" />
            <button type="submit" class="btn btn-danger">Delete</button>
        `;
        
        // Show the modal
        var bsModal = new bootstrap.Modal(modal);
        bsModal.show();
    }

    // Filtering and search
    function applyFilters() {
        const status = $('#statusFilter').val();
        const roomType = $('#roomTypeFilter').val();
        const search = $('#searchInput').val();
        
        // Apply filters via AJAX or page reload
        const params = new URLSearchParams();
        if (status && status !== 'All') params.append('statusFilter', status);
        if (roomType && roomType !== 'All') params.append('roomTypeFilter', roomType);
        if (search) params.append('searchTerm', search);
        
        const url = params.toString() ? `${window.location.pathname}?${params.toString()}` : window.location.pathname;
        window.location.href = url;
    }

    function clearFilters() {
        $('#statusFilter').val('All');
        $('#roomTypeFilter').val('All');
        $('#searchInput').val('');
        window.location.href = window.location.pathname;
    }

    function handleSearchKeyPress(event) {
        if (event.key === 'Enter') {
            applyFilters();
        }
    }

    // Selection management
    function toggleSelectAll() {
        const selectAll = $('#selectAll').is(':checked');
        $('.entry-checkbox').prop('checked', selectAll);
        updateSelectedEntries();
    }

    function updateSelectedEntries() {
        selectedEntries = [];
        $('.entry-checkbox:checked').each(function() {
            selectedEntries.push(parseInt($(this).val()));
        });

        // Show/hide bulk actions panel
        if (selectedEntries.length > 0) {
            $('#bulkActionsPanel').show();
        } else {
            $('#bulkActionsPanel').hide();
        }

        // Update select all checkbox
        const totalCheckboxes = $('.entry-checkbox').length;
        const checkedCheckboxes = $('.entry-checkbox:checked').length;
        
        if (checkedCheckboxes === 0) {
            $('#selectAll').prop('indeterminate', false).prop('checked', false);
        } else if (checkedCheckboxes === totalCheckboxes) {
            $('#selectAll').prop('indeterminate', false).prop('checked', true);
        } else {
            $('#selectAll').prop('indeterminate', true);
        }
    }

    // Bulk actions
    function executeBulkAction() {
        const action = $('#bulkActionSelect').val();
        const message = $('#bulkMessage').val();

        if (!action) {
            alert('Please select a bulk action');
            return;
        }

        if (selectedEntries.length === 0) {
            alert('No entries selected');
            return;
        }

        if (action === 'notify' && !message.trim()) {
            alert('Please enter a notification message');
            return;
        }

        // Execute the bulk action
        const form = $('<form>', {
            method: 'POST',
            action: '/WaitingList/SendBulkNotification'
        });

        // Add anti-forgery token
        form.append($('<input>', {
            type: 'hidden',
            name: '__RequestVerificationToken',
            value: $('input[name="__RequestVerificationToken"]').val()
        }));

        // Add selected IDs
        selectedEntries.forEach(function(id) {
            form.append($('<input>', {
                type: 'hidden',
                name: 'selectedIds',
                value: id
            }));
        });

        // Add message
        if (message) {
            form.append($('<input>', {
                type: 'hidden',
                name: 'message',
                value: message
            }));
        }

        $('body').append(form);
        form.submit();
    }

    // Export function
    function exportWaitingList() {
        window.location.href = '/WaitingList/Export';
    }

    // Notification modal
    function openNotificationModal(waitingListId) {
        // TODO: Implement notification modal
        alert('Notification modal will be implemented in Phase 2');
    }
</script>
}

<style>
    .summary-card {
        border: 1px solid #e9ecef;
        border-radius: 12px;
        background: #fff;
        transition: transform 0.2s ease;
    }

    .summary-card:hover {
        transform: translateY(-2px);
    }

    .summary-icon {
        width: 48px;
        height: 48px;
        border-radius: 12px;
        display: flex;
        align-items: center;
        justify-content: center;
        color: white;
        font-size: 1.2rem;
    }

    .summary-title {
        font-size: 0.875rem;
        color: #6c757d;
        margin-bottom: 0.25rem;
        font-weight: 500;
    }

    .summary-value {
        font-size: 1.75rem;
        font-weight: 700;
        margin: 0;
        line-height: 1;
    }

    .contact-icon {
        flex-shrink: 0;
    }

    .preferences-info,
    .registration-info,
    .notification-stats {
        font-size: 0.875rem;
    }

    .table-container {
        background: white;
        border: 1px solid #e9ecef;
        border-radius: 12px;
        overflow: hidden;
    }

    .table-header {
        background: linear-gradient(135deg, #f8f9fa 0%, #e9ecef 100%);
        padding: 1.5rem;
        border-bottom: 1px solid #dee2e6;
    }

    .table-title {
        margin: 0;
        color: #495057;
        font-weight: 600;
    }

    .table-description {
        margin: 0.25rem 0 0 0;
        color: #6c757d;
        font-size: 0.875rem;
    }

    .page-header {
        background: linear-gradient(135deg, #fff 0%, #f8f9fa 100%);
        padding: 2rem;
        border: 1px solid #e9ecef;
        border-radius: 12px;
    }

    .page-icon {
        width: 60px;
        height: 60px;
        background: linear-gradient(135deg, #007bff 0%, #0056b3 100%);
        border-radius: 16px;
        display: flex;
        align-items: center;
        justify-content: center;
        color: white;
        font-size: 1.75rem;
        margin-right: 1rem;
        float: left;
    }

    .page-title-main {
        font-size: 2rem;
        font-weight: 700;
        color: #212529;
        margin: 0;
        display: flex;
        align-items: center;
    }

    .page-title-sub {
        font-size: 1rem;
        margin-top: 0.5rem;
        clear: left;
    }

    .page-action-btn {
        font-weight: 600;
        padding: 0.75rem 1.5rem;
        border-radius: 8px;
        transition: all 0.2s ease;
    }

    .page-action-btn.primary {
        background: linear-gradient(135deg, #007bff 0%, #0056b3 100%);
        border: none;
    }

    .page-action-btn:hover {
        background: linear-gradient(135deg, #0056b3 0%, #004085 100%);
        transform: none;
    }

    .page-info {
        font-size: 0.875rem;
    }

    #bulkActionsPanel {
        border: 2px solid #007bff;
        border-radius: 12px;
        background: #fff;
    }
</style>