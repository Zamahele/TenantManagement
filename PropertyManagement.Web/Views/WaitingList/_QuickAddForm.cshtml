@model PropertyManagement.Web.ViewModels.QuickAddWaitingListViewModel

<!-- Form Error Display -->
<div id="quickFormErrors" class="alert alert-danger" style="display: none;"></div>
<div id="quickFormSuccess" class="alert alert-success" style="display: none;"></div>

<form id="quickAddForm" action="/WaitingList/QuickAdd" method="post" class="needs-validation" novalidate>
    @Html.AntiForgeryToken()

    <div class="row">
        <!-- Header -->
        <div class="col-12">
            <div class="alert alert-info">
                <i class="bi bi-info-circle me-2"></i>
                <strong>Quick Add for Phone Calls</strong><br>
                Quickly add a prospect to the waiting list during a phone conversation. Only essential information is required.
            </div>
        </div>

        <!-- Left Column -->
        <div class="col-lg-6">
            <div class="mb-3">
                <label asp-for="PhoneNumber" class="form-label fw-semibold">Phone Number <span class="text-danger">*</span></label>
                <div class="input-group">
                    <span class="input-group-text">
                        <i class="bi bi-telephone"></i>
                    </span>
                    <input asp-for="PhoneNumber" class="form-control" 
                           placeholder="0821234567" 
                           pattern="^0[6-8][0-9]{8}$"
                           title="South African mobile number (e.g., 0821234567)"
                           maxlength="10" autofocus required />
                </div>
                <div class="invalid-feedback">Please enter a valid SA mobile number.</div>
                <small class="text-muted">South African mobile format (e.g., 0821234567)</small>
            </div>

            <div class="mb-3">
                <label asp-for="FullName" class="form-label fw-semibold">Full Name</label>
                <div class="input-group">
                    <span class="input-group-text">
                        <i class="bi bi-person-circle"></i>
                    </span>
                    <input asp-for="FullName" class="form-control" placeholder="Enter their name if provided" />
                </div>
                <small class="text-muted">Optional - can be added later if not provided</small>
            </div>

            <div class="mb-3">
                <label asp-for="PreferredRoomType" class="form-label fw-semibold">Preferred Room Type</label>
                <div class="input-group">
                    <span class="input-group-text">
                        <i class="bi bi-door-closed"></i>
                    </span>
                    <select asp-for="PreferredRoomType" class="form-select">
                        <option value="Any">Any Room Type</option>
                        <option value="Single">Single Room</option>
                        <option value="Double">Double Room</option>
                        <option value="Family">Family Room</option>
                        <option value="Studio">Studio Apartment</option>
                    </select>
                </div>
            </div>
        </div>

        <!-- Right Column -->
        <div class="col-lg-6">
            <div class="mb-3">
                <label asp-for="MaxBudget" class="form-label fw-semibold">Budget Range</label>
                <div class="input-group">
                    <span class="input-group-text">
                        <i class="bi bi-currency-dollar"></i>
                    </span>
                    <span class="input-group-text">R</span>
                    <input asp-for="MaxBudget" class="form-control" placeholder="0.00" step="0.01" />
                </div>
                <small class="text-muted">Maximum they can afford per month</small>
            </div>

            <div class="mb-3">
                <label asp-for="Source" class="form-label fw-semibold">Source</label>
                <div class="input-group">
                    <span class="input-group-text">
                        <i class="bi bi-signpost"></i>
                    </span>
                    <select asp-for="Source" class="form-select">
                        <option value="Phone">Phone Call</option>
                        <option value="Referral">Referral</option>
                        <option value="Website">Website</option>
                        <option value="Social Media">Social Media</option>
                        <option value="Walk-in">Walk-in</option>
                        <option value="Other">Other</option>
                    </select>
                </div>
                <small class="text-muted">How did they find us?</small>
            </div>

            <div class="mb-3">
                <label asp-for="Notes" class="form-label fw-semibold">Quick Notes</label>
                <div class="input-group">
                    <span class="input-group-text">
                        <i class="bi bi-journal-text"></i>
                    </span>
                    <textarea asp-for="Notes" class="form-control" rows="3" 
                             placeholder="Any important details from the call..."></textarea>
                </div>
                <small class="text-muted">What did they say? When can they move? Special requirements?</small>
            </div>
        </div>

        <!-- Quick Tips -->
        <div class="col-12">
            <div class="card bg-light border-0">
                <div class="card-body p-3">
                    <h6 class="card-title text-primary">
                        <i class="bi bi-lightbulb me-1"></i> Phone Call Tips
                    </h6>
                    <ul class="mb-0 small">
                        <li>Let them know they'll be notified immediately when a room becomes available</li>
                        <li>Ask about their preferred room type and budget range</li>
                        <li>Confirm their phone number is active for SMS notifications</li>
                        <li>You can add more details later if needed</li>
                    </ul>
                </div>
            </div>
        </div>
    </div>

</form>

<div class="row mt-4">
    <div class="col-12">
        <div class="d-flex justify-content-end gap-2">
            <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">
                <i class="bi bi-x-circle"></i> Cancel
            </button>
            <button type="submit" class="btn btn-primary" form="quickAddForm">
                <i class="bi bi-person-plus"></i> 
                <span class="submit-text">Add to Waiting List</span>
                <div class="spinner-border spinner-border-sm ms-2" style="display: none;" role="status" aria-hidden="true"></div>
            </button>
        </div>
    </div>
</div>

<script>
    $(document).ready(function() {
        initializeQuickAddForm();
    });

    function initializeQuickAddForm() {
        const form = $('#quickAddForm');
        
        // Form validation and submission
        form.on('submit', function(e) {
            e.preventDefault();
            submitQuickAddForm();
        });

        // Phone number formatting
        $('#PhoneNumber').on('input', function() {
            let value = $(this).val().replace(/\D/g, ''); // Remove non-digits
            if (value.length > 10) {
                value = value.substring(0, 10);
            }
            $(this).val(value);
            
            // Auto-advance to next field when 10 digits entered
            if (value.length === 10) {
                $('#FullName').focus();
            }
        });

        // Auto-format budget
        $('#MaxBudget').on('blur', function() {
            const value = parseFloat($(this).val());
            if (!isNaN(value)) {
                $(this).val(value.toFixed(2));
            }
        });

        // Character limit for notes
        $('#Notes').on('input', function() {
            const maxLength = 500;
            const currentLength = $(this).val().length;
            if (currentLength > maxLength) {
                $(this).val($(this).val().substring(0, maxLength));
            }
        });

        // Focus on phone number when modal opens
        $('#PhoneNumber').focus();
    }

    function submitQuickAddForm() {
        const form = $('#quickAddForm');
        const submitButton = form.find('button[type="submit"]');
        const spinner = submitButton.find('.spinner-border');
        const errorDiv = $('#quickFormErrors');
        const successDiv = $('#quickFormSuccess');
        
        // Show loading state
        submitButton.prop('disabled', true);
        spinner.show();
        errorDiv.hide();
        successDiv.hide();
        
        // Submit form via AJAX
        $.ajax({
            url: form.attr('action'),
            method: 'POST',
            data: form.serialize(),
            headers: {
                'X-Requested-With': 'XMLHttpRequest'
            }
        })
        .done(function(response) {
            if (response.success) {
                successDiv.html(`<i class="bi bi-check-circle"></i> ${response.message}`).show();
                
                // Show success state for a moment
                setTimeout(function() {
                    $('#quickAddModal').modal('hide');
                    
                    // Optional: Show a toast notification
                    showToast('Success', 'Contact added to waiting list successfully!', 'success');
                    
                    // Refresh the page or update the list
                    if (typeof updateWaitingListTable === 'function') {
                        updateWaitingListTable();
                    } else {
                        window.location.reload();
                    }
                }, 1500);
            } else {
                if (response.errors && Array.isArray(response.errors)) {
                    errorDiv.html(`<i class="bi bi-exclamation-triangle"></i> ${response.errors.join('<br>')}`).show();
                } else {
                    errorDiv.html(`<i class="bi bi-exclamation-triangle"></i> ${response.message || 'An error occurred'}`).show();
                }
            }
        })
        .fail(function(xhr) {
            let errorMessage = 'An error occurred while adding to waiting list. Please try again.';
            if (xhr.responseJSON && xhr.responseJSON.message) {
                errorMessage = xhr.responseJSON.message;
            }
            errorDiv.html(`<i class="bi bi-exclamation-triangle"></i> ${errorMessage}`).show();
        })
        .always(function() {
            submitButton.prop('disabled', false);
            spinner.hide();
        });
    }

    // Simple toast notification function
    function showToast(title, message, type) {
        // Create toast element if it doesn't exist
        let toastContainer = $('#toast-container');
        if (toastContainer.length === 0) {
            $('body').append('<div id="toast-container" class="position-fixed top-0 end-0 p-3" style="z-index: 9999;"></div>');
            toastContainer = $('#toast-container');
        }

        const toastId = 'toast-' + Date.now();
        const toastHtml = `
            <div id="${toastId}" class="toast" role="alert" aria-live="assertive" aria-atomic="true">
                <div class="toast-header bg-${type} text-white">
                    <strong class="me-auto">${title}</strong>
                    <button type="button" class="btn-close btn-close-white" data-bs-dismiss="toast"></button>
                </div>
                <div class="toast-body">
                    ${message}
                </div>
            </div>
        `;
        
        toastContainer.append(toastHtml);
        
        const toast = new bootstrap.Toast(document.getElementById(toastId));
        toast.show();
        
        // Remove toast element after it's hidden
        document.getElementById(toastId).addEventListener('hidden.bs.toast', function() {
            this.remove();
        });
    }
</script>

<style>
    /* Phone number input styling */
    #PhoneNumber {
        font-family: 'Consolas', 'Monaco', 'Courier New', monospace;
        letter-spacing: 1px;
    }

    /* Toast styling */
    .toast {
        min-width: 300px;
    }

    .toast-header.bg-success {
        background-color: #198754 !important;
    }

    .toast-header.bg-danger {
        background-color: #dc3545 !important;
    }

    .toast-header.bg-info {
        background-color: #0dcaf0 !important;
    }
</style>