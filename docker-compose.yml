# docker-compose.yml
services:
  db:
    image: mcr.microsoft.com/mssql/server:2022-latest
    environment:
      - ACCEPT_EULA=Y
      - SA_PASSWORD=Your_password123
    ports:
      - "1433:1433"
    healthcheck:
      test: ["CMD-SHELL", "echo 'SELECT 1' | /opt/mssql-tools/bin/sqlcmd -S localhost -U sa -P $SA_PASSWORD"]
      interval: 10s
      timeout: 10s
      retries: 15
    volumes:
      - mssql_data:/var/opt/mssql
    networks:
      - mynet
    restart: unless-stopped

  web:
    # The below uses the TAG env variable, or 'latest' if not set
    image: ghcr.io/zamahele/tenantmanagement:${TAG:-latest}
    ports:
      - "8443:443"
      - "8080:80"
    depends_on:
      db:
        condition: service_healthy
      elasticsearch:
        condition: service_started
      kibana:
        condition: service_started
    environment:
      - ASPNETCORE_ENVIRONMENT=Production
      - OTEL_EXPORTER_OTLP_ENDPOINT=http://otel-collector:4317
    volumes:
      - ./aspnetapp.pfx:/https/aspnetapp.pfx:ro
      - ./logs:/app/logs
    networks:
      - mynet
    restart: always

  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:8.13.4
    environment:
      - discovery.type=single-node
      - xpack.security.enabled=false
      - ES_JAVA_OPTS=-Xms512m -Xmx512m
    ports:
      - "9200:9200"
    volumes:
      - esdata:/usr/share/elasticsearch/data
    networks:
      - mynet
    restart: unless-stopped

  kibana:
    image: docker.elastic.co/kibana/kibana:8.13.4
    environment:
      - ELASTICSEARCH_HOSTS=http://elasticsearch:9200
    ports:
      - "5601:5601"
    depends_on:
      - elasticsearch
    networks:
      - mynet
    restart: unless-stopped

  prometheus:
    image: prom/prometheus:latest
    container_name: prometheus
    volumes:
      - ./prometheus.docker.yml:/etc/prometheus/prometheus.yml:ro
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
    ports:
      - "9090:9090"
    networks:
      - mynet
    depends_on:
      - web
    restart: unless-stopped

  grafana:
    image: grafana/grafana:latest
    container_name: grafana
    ports:
      - "3000:3000"
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=admin
    networks:
      - mynet
    depends_on:
      - prometheus
    restart: unless-stopped

  otel-collector:
    image: otel/opentelemetry-collector-contrib:latest
    command: ["--config=/etc/otel-collector-config.yaml"]
    volumes:
      - ./otel-collector-config.yaml:/etc/otel-collector-config.yaml:ro
    ports:
      - "4317:4317" # OTLP gRPC
      - "4318:4318" # OTLP HTTP (optional)
    networks:
      - mynet
    restart: unless-stopped

volumes:
  mssql_data:
  esdata:

networks:
  mynet:
    driver: bridge